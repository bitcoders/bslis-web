<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Line Chart Example</title>
    <!-- Include Chart.js library and datalabels plugin -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <style>
        /* Add styles to set the initial width and height of the canvas */
        canvas {
            width: 400px; /* Set your desired width */
            height: 200px; /* Set your desired height */
        }
        #chartHeading {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 18px;
            font-weight: bold;
            color: #333;
        }
    </style>
</head>
<body>
    <!-- Create a canvas element to render the chart -->
    <canvas id="myLineChart"></canvas>

    <table id="myTable"></table>
    <div id="chartHeading">Hourly Cane Crushing - <strong>16-11-2023</strong></div>
    <script>
        async function fetchData() {
            return new Promise((resolve, reject) => {
                let param = JSON.stringify({
                    "user_code": "",
                    "company_code": null,
                    "unit_code": null,
                    "season_code": 24,
                    "entry_date": "2023-11-16"
                });
                $.ajax({
                    type: "POST",
                    url: "/api/DashBoardApi/GetHourlyData",
                    contentType: 'application/json',
                    data: param,
                    dataType: "json",
                    success: (response) => {
                        resolve(response);
                    },
                    error: (error) => {
                        reject(error);
                    }
                });
            });
        }

        function createChart(data) {
            var storeLabels = data.map(store => store.unitName);
            var storeDatasets = data.map(store => ({
                label: store.unitName,
                backgroundColor: 'rgba(' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ', 0.2)',
                borderColor: 'rgba(' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ', 1)',
                borderWidth: 2,
                pointStyle: 'rectRot',
                pointRadius: 10,
                pointHoverRadius: 15,
                data: store.hourlyValues.map(hourly => parseInt(hourly.value))
            }));

            var options = {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    datalabels: {
                        display: true,
                        color: 'black',
                        align: 'center',
                        anchor: 'center'
                    }
                }
            };

            var ctx = document.getElementById('myLineChart').getContext('2d');
            var myLineChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: data[0].hourlyValues.map(hourly => hourly.hour),
                    datasets: storeDatasets
                },
                options: options,
                responsive: false // Disable responsive feature
            });

            // Update canvas size if needed
            ctx.canvas.width = 400; // Set your desired width
            ctx.canvas.height = 200; // Set your desired height
        }


        //function createTable(data) {
        //    var table = document.getElementById('myTable');

        //    // Create table body
        //    var tbody = document.createElement("tbody");
        //    data.forEach(item => {
        //        var row = tbody.insertRow();
        //        var cell = row.insertCell();
        //        cell.textContent = item.unitName;
        //        item.hourlyValues.forEach(hourly => {
        //            var cell = row.insertCell();
        //            cell.textContent = hourly.value;
        //        });
        //    });

        //    table.appendChild(tbody);
        //}

        window.onload = async function () {
            try {
                var apiData = await fetchData();
                console.log(apiData);
                createChart(apiData);
                createTable(apiData);
            } catch (error) {
                console.error(error);
            }
        };
    </script>
</body>
</html>
