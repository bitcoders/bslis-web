@model LitmusWeb.Models.MasterUserModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{

    <link rel="stylesheet" href="~/Content/bootstrap.min.css">
}
<div class="main-panel">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <p class="card-description">
                            <span class="mdi mdi-database-plus menu-icon badge badge-info badge-pill">Add New User</span>
                            @Html.ActionLink("Back to List", "Index", new { }, new { @class = " badge badge-pill badge-success mdi mdi-step-backward-2 float-right" })
                        </p>
                        @using (Html.BeginForm("Create", "User", FormMethod.Post, new { @class = "needs-validation" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.CompanyCode, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.CompanyCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CompanyCode, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.BaseUnit, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.BaseUnit, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BaseUnit, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.UnitCode, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.UnitCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UnitCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.EmailNewLetter, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.EmailNewLetter, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmailNewLetter, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.MobileAlert, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.MobileAlert, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MobileAlert, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.IsDeleted, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-12 mb-2">
                                    <label class="badge badge-outline-info">Unit Rights</label>
                                    @foreach (var x in ViewBag.UnitList)
                                    {
                                        <label class="form-check-label">
                                            @*If unit code exists in user's unitrights column then mark it checked other wise let it remain unchecked*@
                                            <input type="checkbox" id="@x.Name" name="UnitCheckBoxes" value="@x.Code" />
                                            @x.Name
                                        </label>
                                    }
                                    @Html.Hidden("UnitRights", new { }, new { @id = "UnitRights" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-12 mb-2">
                                    <label class="badge badge-outline-info">Dashboard Rights</label>
                                    @foreach (var x in ViewBag.UnitList)
                                    {
                                        <label class="form-check-label">
                                            @*If unit code exists in user's unitrights column then mark it checked other wise let it remain unchecked*@
                                            <input type="checkbox" id="dash-@x.Code" name="DashBoardUnitCheckBoxes" value="@x.Code" />
                                            @x.Name
                                        </label>
                                    }
                                    @Html.Hidden("DashboardUnits", new { }, new { @id = "DashboardUnits" })
                                </div>
                            </div>


                            <div class="col-md-12">
                                <div class="form-label-group row">
                                    <div class="col-sm-12">
                                        <label class="badge badge-outline-info">User Roles</label>

                                        <div class="d-flex flex-wrap">
                                            @foreach (var x in ViewBag.MasterRolesList)
                                            {
                                                
                                                    <input type="checkbox" id="@x.Code" name="RolesCheckBox" value="@x.Name" title="@x.Description" class="custom-control custom-checkbox mb-2 mr-1 " />
                                                    <label class="mr-2">@x.Name</label>
                                               
                                                
                                            }

                                        </div>
                                                </div>
                                    @Html.HiddenFor(model => model.Role)
                                </div>
                            </div>


                            <div class="form-row">
                                <div class="col-md-12">
                                    <div class="form-label-group row">
                                        <div class="col-sm-4">
                                            @Html.LabelFor(m => m.EntryAllowedSeasons, new { @class = "badge badge-outline-info" })
                                            @Html.EditorFor(m => m.EntryAllowedSeasons, new { htmlAttributes = new { @class = "form-control" } })

                                        </div>
                                    </div>
                                    <div class="form-label-group row">
                                        <div class="col-sm-4">
                                            @Html.LabelFor(m => m.ModificationAllowedForSeasons, new { @class = "badge badge-outline-info" })
                                            @Html.EditorFor(m => m.ModificationAllowedForSeasons, new { htmlAttributes = new { @class = "form-control" } })

                                        </div>
                                    </div>
                                    <div class="form-label-group row">
                                        <div class="col-sm-4">
                                            @Html.LabelFor(m => m.ViewAllowedForSeasons, new { @class = "badge badge-outline-info" })
                                            @Html.EditorFor(m => m.ViewAllowedForSeasons, new { htmlAttributes = new { @class = "form-control" } })

                                        </div>
                                    </div>
                                </div>

                            </div>

                            @Html.ValidationSummary(false, "", new { @class = "text-danger" });
                            <button class="btn btn-primary" type="submit">Submit Form</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*MasterUsers js performs operation on unit rights check box*@
    <script src="~/Scripts/CustomScripts/MasterUsers.js"></script>

