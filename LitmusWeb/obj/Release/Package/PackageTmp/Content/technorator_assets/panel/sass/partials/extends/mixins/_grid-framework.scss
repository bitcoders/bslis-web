@mixin extend-make-grid-columns($prefix, $grid-count, $i: 1, $list: ".col-#{$prefix}-xs-#{$i}, .col-#{$prefix}-sm-#{$i}, .col-#{$prefix}-md-#{$i}, .col-#{$prefix}-lg-#{$i}") 
{
	@for $i from (1 + 1) through $grid-count
	{
		$list: "#{$list}, .col-#{$prefix}-xs-#{$i}, .col-#{$prefix}-sm-#{$i}, .col-#{$prefix}-md-#{$i}, .col-#{$prefix}-lg-#{$i}, .col-#{$prefix}-xl-#{$i}";
	}

	#{$list} 
	{
		position: relative;
		// Prevent columns from collapsing when empty
		min-height: 1px;
		// Inner gutter via padding
		padding-left:  rem-calc(ceil(($grid-gutter-width / 2)));
		padding-right: rem-calc(floor(($grid-gutter-width / 2)));
	}
}

// [converter] This is defined recursively in LESS, but Sass supports real loops
@mixin float-grid-columns($class, $prefix, $grid-count, $i: 1, $list: ".col-#{$prefix}-#{$class}-#{$i}") 
{
	@for $i from (1 + 1) through $grid-count
	{
		$list: "#{$list}, .col-#{$prefix}-#{$class}-#{$i}";
	}
	
	#{$list}
	{
		float: left;
	}
}

@mixin calc-grid-column($index, $class, $prefix, $grid-count, $type) 
{
	@if ($type == width) and ($index > 0)
	{
		.col-#{$prefix}-#{$class}-#{$index}
		{
			width: percentage(($index / $grid-count));
		}
	}
	
	@if ($type == push) and ($index > 0)
	{
		.col-#{$prefix}-#{$class}-push-#{$index}
		{
			left: percentage(($index / $grid-count));
		}
	}

	@if ($type == push) and ($index == 0)
	{
		.col-#{$prefix}-#{$class}-push-0
		{
			left: auto;
		}
	}
	
	@if ($type == pull) and ($index > 0)
	{
		.col-#{$prefix}-#{$class}-pull-#{$index}
		{
			right: percentage(($index / $grid-count));
		}
	}
	
	@if ($type == pull) and ($index == 0)
	{
		.col-#{$prefix}-#{$class}-pull-0
		{
			right: auto;
		}
	}
	
	@if ($type == offset)
	{
		.col-#{$prefix}-#{$class}-offset-#{$index}
		{
			margin-left: percentage(($index / $grid-count));
		}
	}
}

// [converter] This is defined recursively in LESS, but Sass supports real loops
@mixin loop-grid-columns($class, $prefix, $grid-count, $type)
{
	@for $i from 0 through $grid-count
	{
		@include calc-grid-column($i, $class, $prefix, $grid-count, $type);
	}
}

@mixin extend-make-grid($class, $prefix, $grid-count)
{
	@include float-grid-columns($class, $prefix, $grid-count);
	@include loop-grid-columns($class, $prefix, $grid-count, width);
	@include loop-grid-columns($class, $prefix, $grid-count, pull);
	@include loop-grid-columns($class, $prefix, $grid-count, push);
	@include loop-grid-columns($class, $prefix, $grid-count, offset);
}