@model LitmusWeb.Models.MasterUserUpdateModel
@{
    ViewBag.Title = "Edit- User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="main-panel">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-lg-12 grid-margin">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">
                            <span class="badge badge-info"><code>Edit</code>Details of @Model.FirstName @Model.LastName </span>
                            <span>@Html.ActionLink("Back to List", "Index", new { }, new { @class = " badge badge-pill badge-success mdi mdi-step-backward-2 float-right" })</span>
                        </h4>
                        <hr />

                        @using (Html.BeginForm("Edit", "User", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                            <p class="card-description text-primary">Modify Analysis performed on Melting</p>

                            <div class="form-group row">
                                <div class="col-md-6">
                                    <div class="form-label-group">
                                        @Html.EditorFor(model => model.CompanyCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.LabelFor(model => model.CompanyCode, htmlAttributes: new { @class = "col-form-label" })

                                        @Html.ValidationMessageFor(model => model.CompanyCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-label-group">
                                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "col-form-label" })

                                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group row">
                                <div class="col-md-6">
                                    <div class="form-label-group">
                                        @Html.EditorFor(model => model.BaseUnit, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.LabelFor(model => model.BaseUnit, htmlAttributes: new { @class = "col-form-label" })

                                        @Html.ValidationMessageFor(model => model.BaseUnit, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-label-group">
                                        @Html.EditorFor(model => model.UnitCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.LabelFor(model => model.UnitCode, htmlAttributes: new { @class = "col-form-label" })

                                        @Html.ValidationMessageFor(model => model.UnitCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group row">
                                <div class="col-md-6">
                                    <div class="form-label-group">
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-form-label" })

                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-label-group">
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-form-label" })

                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                           
                            <div class="form-group row">
                                <div class="col-md-6">
                                    <div class="form-label-group">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-form-label" })

                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-label-group">
                                        @Html.EditorFor(model => model.EmailNewLetter, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.LabelFor(model => model.EmailNewLetter, htmlAttributes: new { @class = "col-form-label" })

                                        @Html.ValidationMessageFor(model => model.EmailNewLetter, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-md-6">
                                    <div class="form-label-group">
                                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "col-form-label" })

                                        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-label-group">
                                        @Html.LabelFor(model => model.MobileAlert, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.MobileAlert, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.MobileAlert, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="col-md-6">
                                    <div class="form-label-group">
                                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-label-group">
                                        @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.IsDeleted, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="col-sm-12">
                                        <label class="badge badge-outline-info" style="top:-29px; left:3px;">Units Rights</label>
                                    </div>
                                </div>
                            <div class="col-md-12">
                                <div class="form-label-group row">
                                    <div class="col-sm-12">
                                        
                                        @foreach (var x in ViewBag.UnitList)
                                        {
                                            <div class="form-check-inline">
                                                @*If unit code exists in user's unitrights column then mark it checked other wise let it remain unchecked*@
                                                @if (Model.UnitRights != null && Model.UnitRights.Contains(x.Code.ToString()))
                                                {
                                                    <input type="checkbox" id="@x.Name" name="UnitCheckBoxes" class="checkbox-inline" value="@x.Code" checked />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" id="@x.Name" name="UnitCheckBoxes" class="checkbox-inline" value="@x.Code" />
                                                }
                                                @x.Name
                                            </div>
                                        }
                                    </div>
                                </div>
                                @Html.HiddenFor(model => model.UnitRights)
                            </div>
                            <hr />
                            <div class="form-row">
                                <div class="col-sm-12">
                                    <div class="form-check-inline">
                                        @foreach (var x in ViewBag.UnitList)
                                        {
                                            if (Model.DashboardUnits != null && Model.DashboardUnits.Contains(x.Code.ToString()))
                                            {
                                                <input type="checkbox" id="dash-@x.Name" name="DashBoardUnitCheckBoxes" class="checkbox-inline" value="@x.Code" checked />
                                            }
                                            else
                                            {
                                                <input type="checkbox" id="dash-@x.Name" name="DashBoardUnitCheckBoxes" class="checkbox-inline" value="@x.Code" />
                                            }
                                            @x.Name

                                        }
                                    </div>
                                </div>
                                @Html.HiddenFor(model => model.DashboardUnits)
                            </div>
                            <hr />
                            <div class="col-md-12">
                                <div class="form-label-group row">
                                    <div class="col-sm-12">
                                        <label class="badge badge-outline-info">User Roles</label>
                                        @foreach (var x in ViewBag.MasterRolesList)
                                        {
                                            if (Model.Role == null)
                                            {
                                                <input type="checkbox" id="@x.Code" name="RolesCheckBox" value="@x.Name" title="@x.Description" />
                                                @x.Name
                                            }
                                            else if (Model.Role.Contains(x.Name))
                                            {
                                                <input type="checkbox" id="@x.Code" name="RolesCheckBox" value="@x.Name" checked title="@x.Description" />
                                                @x.Name
                                            }
                                            else
                                            {
                                                <input type="checkbox" id="@x.Code" name="RolesCheckBox" value="@x.Name" title="@x.Description" />
                                                @x.Name
                                            }
                                        }
                                    </div>
                                    @Html.HiddenFor(model => model.Role)
                                </div>
                            </div>
                            @Html.ValidationSummary(false, "", new { @class = "text-danger" });
                            <button type="submit" id="btnSubmit" name="btnSubmit" class="btn btn-inverse-danger">Save Changes</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*MasterUsers js performs operation on unit rights check box*@
    <script src="~/Scripts/CustomScripts/MasterUsers.js"></script>
    <link href="~/Content/MainContent/css/floating-labels.css" rel="stylesheet" />
