@model LitmusWeb.Models.MasterUnitModelForUnitAdmin
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/Content/MainContent/vendors/jquery-toast-plugin/jquery.toast.min.css" />
<div class="main-panel">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <p class="card-description">
                            @Html.ActionLink("Back to List", "Index", new { }, new { @class = " badge badge-pill badge-success mdi mdi-step-backward-2 float-right" })
                        </p>
                        @using (Html.BeginForm("Edit", "UnitDailyParameter", FormMethod.Post, new { @class = "needs-validation" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-row">
                                <div class="col-md-4 mb-2">
                                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.CrushingSeason, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.CrushingSeason, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CrushingSeason, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.CrushingStartDate, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.CrushingStartDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CrushingStartDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.CrushingEndDate, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.CrushingEndDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CrushingEndDate, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.DayHours, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.DayHours, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.DayHours, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.EntryDate, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.EntryDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.EntryDate, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.ProcessDate, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.ProcessDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.ProcessDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <button class="btn btn-primary" id="btnSubmit" name="btnSumbit" type="submit">Submit Form</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="~/Content/MainContent/vendors/jquery-toast-plugin/jquery.toast.min.js"></script>
    <script src="~/Scripts/js/toastDemo.js"></script>
    <script>
    var entrydate;
    var EditAllowedDays = 0;
    $(document).ready(function () {
        onloadExecution();
        
    });
    function onloadExecution() {
        var baseUnitCode = '@Session["BaseUnitCode"]';
        $.ajax({
            type: 'Get',
            url: '/api/UnitMasterApi/GetUnitDetailsAsync',
            data: { 'unitCode': baseUnitCode },
            success: (Response, statusCode, jqXHR) => {
                EditAllowedDays = Response.masterUnitViewModel.AllowedModificationDays;
                entrydate = Response.customUnitModel.LatestProcessedDate;
            },
            Error: (error) => {
                console.log("Error occured");
            }
        });
    }
    $("#EntryDate").change(function () {
        console.log($("#EntryDate").val());
        var changedEntryDate = $("#EntryDate").val();
        console.log(changedEntryDate);
        changedEntryDate = $("#EntryDate").val().split("-");
        var a = new Date(changedEntryDate[0], changedEntryDate[1] - 1, changedEntryDate[2]);
        console.log(a);
        console.log(entrydate);
        var b = new Date(entrydate);
        var diff = b.getTime() - a.getTime();
        var dayDiff = diff / (1000 * 3600 * 24);
        if (dayDiff > EditAllowedDays) {
            $("#btnSubmit").prop('disabled', true);
            // calling a showDangerToast defined in toastDemo.js file
            showDangerToast("You are not allowed to edit pervious data earlier than " + EditAllowedDays+"Contact to Admin.");
        }
        else{
            $("#btnSubmit").prop('disabled', false);
        }
    });
    </script>
