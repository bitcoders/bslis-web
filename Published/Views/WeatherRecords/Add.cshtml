@model LitmusWeb.Models.WeatherRecordsModel
@{
    ViewBag.Title = "Weather condition(s)";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="main-panel">
    <div class="content-wrapper">
        <div class="row">
            @*@Html.Partial("_PartialAnalysisDefaultValues")*@
            <div class="col-12 grid-margin">
                <div class="card">
                    <div class="card-body">
                        @Html.ActionLink("Back", "Index", new { }, new { @class = "btn btn-primary float-right" })
                        <h4 class="card-title">
                            @ViewBag.Title
                        </h4>
                        <p class="card-description">
                            Save weather condition detail(s) for the date.
                        </p>
                        @using(Html.BeginForm("Add","WeatherRecords",FormMethod.Post, new { htmlAttributes = new { @class = "form-sample" } }))
                        {
                            @Html.AntiForgeryToken()
                    <div class="form-sample">
                        <div class="form-group row">

                            @Html.LabelFor(x=>x.SeasonCode, new { @class="col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                @Html.DropDownListFor(x=>x.SeasonCode, new SelectList(ViewBag.Seasons,"SeasonCode","SeasonYear"),"--Select Season--",new { @class= "form-control col-form-label" })
                                @Html.ValidationMessageFor(x => x.SeasonCode, "", new { @class="text-danger"})
                            </div>

                            @Html.LabelFor(x => x.RecordDate, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                @Html.EditorFor(x => x.RecordDate, new { htmlAttributes = new { @class = "form-control", @autofocus = "true", @type = "date" } })
                                @Html.ValidationMessageFor(x => x.RecordDate, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(x => x.TemperatureMin, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                @Html.EditorFor(x => x.TemperatureMin, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(x => x.TemperatureMin, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(x => x.TemperatureMax, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                @Html.EditorFor(x => x.TemperatureMax, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(x => x.TemperatureMax, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(x => x.Humidity, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                @Html.EditorFor(x => x.Humidity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(x => x.Humidity, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(x => x.WindSpeed, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                @Html.EditorFor(x => x.WindSpeed, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(x => x.WindSpeed, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(x => x.RainFallMm, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                @Html.EditorFor(x => x.RainFallMm, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(x => x.RainFallMm, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(x => x.UvIndex, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                @Html.EditorFor(x => x.UvIndex, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(x => x.UvIndex, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(x => x.WeatherType, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-4">
                                @*@Html.EditorFor(x => x.WeatherType, new { htmlAttributes = new { @class = "form-control" } })*@
                                @*<select id="WeatherType" name="WeatherType" class="form-control form-control-lg">
                                    <option value="-1">--Select--</option>
                                    @foreach(var x in ViewBag.WeatherTypes)
                                    {
                                        <option value="@x.Code">@x.Text</option>
                                    }
                                </select>*@
                                @Html.DropDownListFor(m=>m.WeatherType, new SelectList(ViewBag.WeatherTypes,"Code","Text"),"--Select--",new { @class="form-control col-form-label"})
                                @Html.ValidationMessageFor(x => x.WeatherType, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(x => x.AllWeatherConditions, new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-4">
                            @Html.HiddenFor(x=>x.AllWeatherConditions)
                            

                            @foreach (var x in ViewBag.WeatherTypes)
                            {
                                <div class="form-check">
                                    <label class="form-check-label">
                                        <input type="checkbox" class="form-check-input weather" id=@x.Text value="@x.Text" />
                                        @x.Text
                                    </label>
                                </div>
                            }
                            </div>
                        </div>
                        <input type="submit" class="btn btn-success pull-right" value="Save" />
                    </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
   
    <script src="~/Scripts/CustomScripts/Weather.js"></script>
