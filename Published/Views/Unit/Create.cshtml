
@model LitmusWeb.Models.MasterUnitModel

@{
    ViewBag.Title = "Create";
    ViewBag.PageName = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
    <div class="main-panel">
        <div class="content-wrapper">
            <div class="row">
                <div class="col-12 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <p class="card-description">
                                <span class="mdi mdi-database-plus menu-icon badge badge-info badge-pill">Add New Unit</span>
                                @Html.ActionLink("Back to List", "Index", new { }, new { @class = " badge badge-pill badge-success mdi mdi-step-backward-2 float-right" })
                            </p>

                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-sample">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10 dropdown">
                                            @Html.DropDownList("CompanyCode", new SelectList(ViewBag.CompanyList, "Code", "Name"), "Select Company", new { @class = "form-control form-control-lg" })
                                            @Html.ValidationMessageFor(model => model.CompanyCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(@model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(@model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(@model => model.Code, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CrushingSeason, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.CrushingSeason, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CrushingSeason, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ReportStartHourMinute, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.ReportStartHourMinute, new { htmlAttributes = new { @class = "form-control datetimepicker", autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.ReportStartHourMinute, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    @*<div class="form-group">
                                        @Html.LabelFor(model => model.CrushingStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.CrushingStartDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CrushingStartDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CrushingStartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.CrushingStartDateTime, new { htmlAttributes = new { @class = "form-control datetimepicker", autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.CrushingStartDateTime, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    @*<div class="form-group">
                                        @Html.LabelFor(model => model.CrushingEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.CrushingEndDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CrushingEndDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CrushingEndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.CrushingEndDateTime, new { htmlAttributes = new { @class = "form-control datetimepicker", autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.CrushingEndDateTime, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DayHours, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.DayHours, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.DayHours, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EntryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.EntryDate, new { htmlAttributes = new { @class = "form-control datepicker", autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.EntryDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ProcessDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.ProcessDate, new { htmlAttributes = new { @class = "form-control datepicker", autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.ProcessDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NewMillCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.NewMillCapacity, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NewMillCapacity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.OldMillCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.OldMillCapacity, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.OldMillCapacity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(Model => Model.AllowedModificationDays, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.AllowedModificationDays, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.AllowedModificationDays, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control datepicker", autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Createdy, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Createdy, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Createdy, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <button type="submit" class="btn btn-success">Create</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <script src="~/Scripts/js/hoverable-collapse.js"></script>
        <script src="~/Scripts/CustomScripts/MasterUnits.js"></script>
