@model LitmusWeb.Models.MasterStoppageTypeModel
@{
    ViewBag.Title = "Edit | Stoppage Category";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main-panel">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <p class="card-description">
                            <span class="mdi mdi-database-plus menu-icon badge badge-info badge-pill">Edit Stoppage Type</span>
                            @Html.ActionLink("Back to List", "Index", new { }, new { @class = " badge badge-pill badge-success mdi mdi-step-backward-2 float-right" })
                        </p>
                        @using (Html.BeginForm("Edit", "StoppageType", FormMethod.Post, new { @class = "needs-validation" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-6 mb-2">
                                    @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <button class="btn btn-primary" type="submit">Submit Form</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
