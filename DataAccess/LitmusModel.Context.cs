//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SugarLabEntities : DbContext
    {
        public SugarLabEntities()
            : base("name=SugarLabEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AndroidMenue> AndroidMenues { get; set; }
        public virtual DbSet<ExceptionLog> ExceptionLogs { get; set; }
        public virtual DbSet<KeySampleAnalys> KeySampleAnalyses { get; set; }
        public virtual DbSet<MasterCompany> MasterCompanies { get; set; }
        public virtual DbSet<MasterDepartment> MasterDepartments { get; set; }
        public virtual DbSet<MasterDesignation> MasterDesignations { get; set; }
        public virtual DbSet<MasterMenu> MasterMenus { get; set; }
        public virtual DbSet<MasterParameterCategory> MasterParameterCategories { get; set; }
        public virtual DbSet<MasterParameterSubCategory> MasterParameterSubCategories { get; set; }
        public virtual DbSet<MasterSeason> MasterSeasons { get; set; }
        public virtual DbSet<MasterStoppageType> MasterStoppageTypes { get; set; }
        public virtual DbSet<MasterSubMenu> MasterSubMenus { get; set; }
        public virtual DbSet<MasterUnitAuthority> MasterUnitAuthorities { get; set; }
        public virtual DbSet<MasterVehicle> MasterVehicles { get; set; }
        public virtual DbSet<MeltingAnalys> MeltingAnalyses { get; set; }
        public virtual DbSet<MolassesAnalys> MolassesAnalyses { get; set; }
        public virtual DbSet<TwoHourlyAnalys> TwoHourlyAnalyses { get; set; }
        public virtual DbSet<UserRight> UserRights { get; set; }
        public virtual DbSet<UserVerification> UserVerifications { get; set; }
        public virtual DbSet<MasterDeviceType> MasterDeviceTypes { get; set; }
        public virtual DbSet<MobileDevice> MobileDevices { get; set; }
        public virtual DbSet<RegisteredDevice> RegisteredDevices { get; set; }
        public virtual DbSet<MasterRole> MasterRoles { get; set; }
        public virtual DbSet<NotificationsTicker> NotificationsTickers { get; set; }
        public virtual DbSet<FirebaseNotificationType> FirebaseNotificationTypes { get; set; }
        public virtual DbSet<FirebaseNotificationRight> FirebaseNotificationRights { get; set; }
        public virtual DbSet<MasterUnit> MasterUnits { get; set; }
        public virtual DbSet<ExcelReportDataType> ExcelReportDataTypes { get; set; }
        public virtual DbSet<ExcelReportTemplate> ExcelReportTemplates { get; set; }
        public virtual DbSet<ReportSchemaColumn> ReportSchemaColumns { get; set; }
        public virtual DbSet<ReportSchema> ReportSchemas { get; set; }
        public virtual DbSet<MassecuiteAnalys> MassecuiteAnalyses { get; set; }
        public virtual DbSet<UnitSeason> UnitSeasons { get; set; }
        public virtual DbSet<ValidationParameter> ValidationParameters { get; set; }
        public virtual DbSet<ValidationType> ValidationTypes { get; set; }
        public virtual DbSet<AuditTable> AuditTables { get; set; }
        public virtual DbSet<Stoppage> Stoppages { get; set; }
        public virtual DbSet<PeriodicalStock> PeriodicalStocks { get; set; }
        public virtual DbSet<ReportDetail> ReportDetails { get; set; }
        public virtual DbSet<ProcessedAdditionalData> ProcessedAdditionalDatas { get; set; }
        public virtual DbSet<LedgerLog> LedgerLogs { get; set; }
        public virtual DbSet<StoppageType> StoppageTypes { get; set; }
        public virtual DbSet<MasterStoppageSubType> MasterStoppageSubTypes { get; set; }
        public virtual DbSet<WeatherRecord> WeatherRecords { get; set; }
        public virtual DbSet<WeatherType> WeatherTypes { get; set; }
        public virtual DbSet<CaneType> CaneTypes { get; set; }
        public virtual DbSet<CaneVariety> CaneVarieties { get; set; }
        public virtual DbSet<CaneVarietyGroup> CaneVarietyGroups { get; set; }
        public virtual DbSet<Grower> Growers { get; set; }
        public virtual DbSet<Village> Villages { get; set; }
        public virtual DbSet<Zone> Zones { get; set; }
        public virtual DbSet<FlexMaster> FlexMasters { get; set; }
        public virtual DbSet<FlexSubMaster> FlexSubMasters { get; set; }
        public virtual DbSet<CaneAnalys> CaneAnalyses { get; set; }
        public virtual DbSet<ledger_data> ledger_data { get; set; }
        public virtual DbSet<OtherRecovery> OtherRecoveries { get; set; }
        public virtual DbSet<PasswordReset> PasswordResets { get; set; }
        public virtual DbSet<EmailConfiguration> EmailConfigurations { get; set; }
        public virtual DbSet<MasterUser> MasterUsers { get; set; }
        public virtual DbSet<HourlyAnalys> HourlyAnalyses { get; set; }
        public virtual DbSet<HourlyAnalysesMillControlData> HourlyAnalysesMillControlDatas { get; set; }
        public virtual DbSet<DataAdjustment> DataAdjustments { get; set; }
        public virtual DbSet<DailyAnalys> DailyAnalyses { get; set; }
    
        public virtual int Proc_Get_MassecuiteAnalyses(Nullable<int> unit_code, Nullable<int> season_code, Nullable<int> param_type_code, string transaction_date, string transaction_time)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var param_type_codeParameter = param_type_code.HasValue ?
                new ObjectParameter("param_type_code", param_type_code) :
                new ObjectParameter("param_type_code", typeof(int));
    
            var transaction_dateParameter = transaction_date != null ?
                new ObjectParameter("transaction_date", transaction_date) :
                new ObjectParameter("transaction_date", typeof(string));
    
            var transaction_timeParameter = transaction_time != null ?
                new ObjectParameter("transaction_time", transaction_time) :
                new ObjectParameter("transaction_time", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Get_MassecuiteAnalyses", unit_codeParameter, season_codeParameter, param_type_codeParameter, transaction_dateParameter, transaction_timeParameter);
        }
    
        public virtual ObjectResult<proc_ledger_page_one_Result> proc_ledger_page_one(Nullable<int> unit_code, Nullable<int> season_Code, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_CodeParameter = season_Code.HasValue ?
                new ObjectParameter("season_Code", season_Code) :
                new ObjectParameter("season_Code", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ledger_page_one_Result>("proc_ledger_page_one", unit_codeParameter, season_CodeParameter, from_dateParameter, to_dateParameter);
        }
    
        public virtual ObjectResult<proc_ledger_page_two_Result> proc_ledger_page_two(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("CrushingSeason", crushingSeason) :
                new ObjectParameter("CrushingSeason", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ledger_page_two_Result>("proc_ledger_page_two", unitCodeParameter, crushingSeasonParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_ledger_page_eight_Result> proc_ledger_page_eight(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("CrushingSeason", crushingSeason) :
                new ObjectParameter("CrushingSeason", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ledger_page_eight_Result>("proc_ledger_page_eight", unitCodeParameter, crushingSeasonParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_ledger_page_eleven_Result> proc_ledger_page_eleven(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("CrushingSeason", crushingSeason) :
                new ObjectParameter("CrushingSeason", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ledger_page_eleven_Result>("proc_ledger_page_eleven", unitCodeParameter, crushingSeasonParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_ledger_page_nine_Result> proc_ledger_page_nine(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("CrushingSeason", crushingSeason) :
                new ObjectParameter("CrushingSeason", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ledger_page_nine_Result>("proc_ledger_page_nine", unitCodeParameter, crushingSeasonParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_ledger_page_seven_Result> proc_ledger_page_seven(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("CrushingSeason", crushingSeason) :
                new ObjectParameter("CrushingSeason", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ledger_page_seven_Result>("proc_ledger_page_seven", unitCodeParameter, crushingSeasonParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_ledger_page_six_Result> proc_ledger_page_six(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("CrushingSeason", crushingSeason) :
                new ObjectParameter("CrushingSeason", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ledger_page_six_Result>("proc_ledger_page_six", unitCodeParameter, crushingSeasonParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_ledger_page_ten_Result> proc_ledger_page_ten(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("CrushingSeason", crushingSeason) :
                new ObjectParameter("CrushingSeason", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ledger_page_ten_Result>("proc_ledger_page_ten", unitCodeParameter, crushingSeasonParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_ledger_page_three_Result> proc_ledger_page_three(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("CrushingSeason", crushingSeason) :
                new ObjectParameter("CrushingSeason", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ledger_page_three_Result>("proc_ledger_page_three", unitCodeParameter, crushingSeasonParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_ledger_page_twelve_Result> proc_ledger_page_twelve(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("CrushingSeason", crushingSeason) :
                new ObjectParameter("CrushingSeason", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ledger_page_twelve_Result>("proc_ledger_page_twelve", unitCodeParameter, crushingSeasonParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_ledger_page_five_Result> proc_ledger_page_five(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("CrushingSeason", crushingSeason) :
                new ObjectParameter("CrushingSeason", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ledger_page_five_Result>("proc_ledger_page_five", unitCodeParameter, crushingSeasonParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_ledger_page_four_Result> proc_ledger_page_four(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("CrushingSeason", crushingSeason) :
                new ObjectParameter("CrushingSeason", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ledger_page_four_Result>("proc_ledger_page_four", unitCodeParameter, crushingSeasonParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_ledger_page_thirteen_Result> proc_ledger_page_thirteen(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("CrushingSeason", crushingSeason) :
                new ObjectParameter("CrushingSeason", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ledger_page_thirteen_Result>("proc_ledger_page_thirteen", unitCodeParameter, crushingSeasonParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<proc_report_comparitive_Result> proc_report_comparitive(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> reportDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("unitCode", unitCode) :
                new ObjectParameter("unitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("crushingSeason", crushingSeason) :
                new ObjectParameter("crushingSeason", typeof(int));
    
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("reportDate", reportDate) :
                new ObjectParameter("reportDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_report_comparitive_Result>("proc_report_comparitive", unitCodeParameter, crushingSeasonParameter, reportDateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_hourly_data_for_period")]
        public virtual IQueryable<func_hourly_data_for_period_Result> func_hourly_data_for_period(Nullable<int> unit_code, Nullable<int> season_code)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_hourly_data_for_period_Result>("[SugarLabEntities].[func_hourly_data_for_period](@unit_code, @season_code)", unit_codeParameter, season_codeParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_massecuite_summary")]
        public virtual IQueryable<func_massecuite_summary_Result> func_massecuite_summary(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> trans_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var trans_dateParameter = trans_date.HasValue ?
                new ObjectParameter("trans_date", trans_date) :
                new ObjectParameter("trans_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_massecuite_summary_Result>("[SugarLabEntities].[func_massecuite_summary](@unit_code, @season_code, @trans_date)", unit_codeParameter, season_codeParameter, trans_dateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_melting_period_summary")]
        public virtual IQueryable<func_melting_period_summary_Result> func_melting_period_summary(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_melting_period_summary_Result>("[SugarLabEntities].[func_melting_period_summary](@unit_code, @season_code, @from_date, @to_date)", unit_codeParameter, season_codeParameter, from_dateParameter, to_dateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_meltings_summary")]
        public virtual IQueryable<func_meltings_summary_Result> func_meltings_summary(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> trans_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var trans_dateParameter = trans_date.HasValue ?
                new ObjectParameter("trans_date", trans_date) :
                new ObjectParameter("trans_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_meltings_summary_Result>("[SugarLabEntities].[func_meltings_summary](@unit_code, @season_code, @trans_date)", unit_codeParameter, season_codeParameter, trans_dateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_molasses_period_summary")]
        public virtual IQueryable<func_molasses_period_summary_Result> func_molasses_period_summary(Nullable<int> unitCode, Nullable<int> seasonCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("unitCode", unitCode) :
                new ObjectParameter("unitCode", typeof(int));
    
            var seasonCodeParameter = seasonCode.HasValue ?
                new ObjectParameter("seasonCode", seasonCode) :
                new ObjectParameter("seasonCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_molasses_period_summary_Result>("[SugarLabEntities].[func_molasses_period_summary](@unitCode, @seasonCode, @fromDate, @toDate)", unitCodeParameter, seasonCodeParameter, fromDateParameter, toDateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_two_hourly_transaction_summary_for_hours")]
        public virtual IQueryable<func_two_hourly_transaction_summary_for_hours_Result> func_two_hourly_transaction_summary_for_hours(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> process_date, Nullable<int> from_time, Nullable<int> to_time)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var process_dateParameter = process_date.HasValue ?
                new ObjectParameter("process_date", process_date) :
                new ObjectParameter("process_date", typeof(System.DateTime));
    
            var from_timeParameter = from_time.HasValue ?
                new ObjectParameter("from_time", from_time) :
                new ObjectParameter("from_time", typeof(int));
    
            var to_timeParameter = to_time.HasValue ?
                new ObjectParameter("to_time", to_time) :
                new ObjectParameter("to_time", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_two_hourly_transaction_summary_for_hours_Result>("[SugarLabEntities].[func_two_hourly_transaction_summary_for_hours](@unit_code, @season_code, @process_date, @from_time, @to_time)", unit_codeParameter, season_codeParameter, process_dateParameter, from_timeParameter, to_timeParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_two_hourly_transaction_summary")]
        public virtual IQueryable<func_two_hourly_transaction_summary_Result> func_two_hourly_transaction_summary(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> process_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var process_dateParameter = process_date.HasValue ?
                new ObjectParameter("process_date", process_date) :
                new ObjectParameter("process_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_two_hourly_transaction_summary_Result>("[SugarLabEntities].[func_two_hourly_transaction_summary](@unit_code, @season_code, @process_date)", unit_codeParameter, season_codeParameter, process_dateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_two_hourly_transaction_summary_for_period")]
        public virtual IQueryable<func_two_hourly_transaction_summary_for_period_Result> func_two_hourly_transaction_summary_for_period(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_two_hourly_transaction_summary_for_period_Result>("[SugarLabEntities].[func_two_hourly_transaction_summary_for_period](@unit_code, @season_code, @from_date, @to_date)", unit_codeParameter, season_codeParameter, from_dateParameter, to_dateParameter);
        }
    
        [DbFunction("SugarLabEntities", "white_sugar_moisture_for_period")]
        public virtual IQueryable<Nullable<decimal>> white_sugar_moisture_for_period(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> from_Date, Nullable<System.DateTime> to_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var from_DateParameter = from_Date.HasValue ?
                new ObjectParameter("from_Date", from_Date) :
                new ObjectParameter("from_Date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<decimal>>("[SugarLabEntities].[white_sugar_moisture_for_period](@unit_code, @season_code, @from_Date, @to_date)", unit_codeParameter, season_codeParameter, from_DateParameter, to_dateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_melting_period_summary_list")]
        public virtual IQueryable<func_melting_period_summary_list_Result> func_melting_period_summary_list(Nullable<int> unitcode, Nullable<int> seasonCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitcodeParameter = unitcode.HasValue ?
                new ObjectParameter("unitcode", unitcode) :
                new ObjectParameter("unitcode", typeof(int));
    
            var seasonCodeParameter = seasonCode.HasValue ?
                new ObjectParameter("seasonCode", seasonCode) :
                new ObjectParameter("seasonCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_melting_period_summary_list_Result>("[SugarLabEntities].[func_melting_period_summary_list](@unitcode, @seasonCode, @fromDate, @toDate)", unitcodeParameter, seasonCodeParameter, fromDateParameter, toDateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_molasses_period_summary_list")]
        public virtual IQueryable<func_molasses_period_summary_list_Result> func_molasses_period_summary_list(Nullable<int> unitCode, Nullable<int> seasonCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("unitCode", unitCode) :
                new ObjectParameter("unitCode", typeof(int));
    
            var seasonCodeParameter = seasonCode.HasValue ?
                new ObjectParameter("seasonCode", seasonCode) :
                new ObjectParameter("seasonCode", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_molasses_period_summary_list_Result>("[SugarLabEntities].[func_molasses_period_summary_list](@unitCode, @seasonCode, @fromDate, @toDate)", unitCodeParameter, seasonCodeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int proc_ProcessedAdditionalData(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> process_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var process_dateParameter = process_date.HasValue ?
                new ObjectParameter("process_date", process_date) :
                new ObjectParameter("process_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_ProcessedAdditionalData", unit_codeParameter, season_codeParameter, process_dateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_massecuite_period_summary")]
        public virtual IQueryable<func_massecuite_period_summary_Result> func_massecuite_period_summary(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_massecuite_period_summary_Result>("[SugarLabEntities].[func_massecuite_period_summary](@unit_code, @season_code, @from_date, @to_date)", unit_codeParameter, season_codeParameter, from_dateParameter, to_dateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_stoppage_data_for_date")]
        public virtual IQueryable<func_stoppage_data_for_date_Result> func_stoppage_data_for_date(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> stoppage_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var stoppage_dateParameter = stoppage_date.HasValue ?
                new ObjectParameter("stoppage_date", stoppage_date) :
                new ObjectParameter("stoppage_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_stoppage_data_for_date_Result>("[SugarLabEntities].[func_stoppage_data_for_date](@unit_code, @season_code, @stoppage_date)", unit_codeParameter, season_codeParameter, stoppage_dateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_stoppage_data_for_period")]
        public virtual IQueryable<func_stoppage_data_for_period_Result> func_stoppage_data_for_period(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> stoppage_from_date, Nullable<System.DateTime> stoppage_to_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var stoppage_from_dateParameter = stoppage_from_date.HasValue ?
                new ObjectParameter("stoppage_from_date", stoppage_from_date) :
                new ObjectParameter("stoppage_from_date", typeof(System.DateTime));
    
            var stoppage_to_dateParameter = stoppage_to_date.HasValue ?
                new ObjectParameter("stoppage_to_date", stoppage_to_date) :
                new ObjectParameter("stoppage_to_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_stoppage_data_for_period_Result>("[SugarLabEntities].[func_stoppage_data_for_period](@unit_code, @season_code, @stoppage_from_date, @stoppage_to_date)", unit_codeParameter, season_codeParameter, stoppage_from_dateParameter, stoppage_to_dateParameter);
        }
    
        public virtual ObjectResult<proc_stoppage_headwise_period_summary_Result> proc_stoppage_headwise_period_summary(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<bool> previous_season)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var previous_seasonParameter = previous_season.HasValue ?
                new ObjectParameter("previous_season", previous_season) :
                new ObjectParameter("previous_season", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_stoppage_headwise_period_summary_Result>("proc_stoppage_headwise_period_summary", unit_codeParameter, season_codeParameter, from_dateParameter, to_dateParameter, previous_seasonParameter);
        }
    
        public virtual ObjectResult<proc_rpt_cane_analysis_by_sample_date_Result> proc_rpt_cane_analysis_by_sample_date(Nullable<int> unit_code, Nullable<int> seasonCode, Nullable<System.DateTime> sample_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var seasonCodeParameter = seasonCode.HasValue ?
                new ObjectParameter("seasonCode", seasonCode) :
                new ObjectParameter("seasonCode", typeof(int));
    
            var sample_dateParameter = sample_date.HasValue ?
                new ObjectParameter("sample_date", sample_date) :
                new ObjectParameter("sample_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_rpt_cane_analysis_by_sample_date_Result>("proc_rpt_cane_analysis_by_sample_date", unit_codeParameter, seasonCodeParameter, sample_dateParameter);
        }
    
        public virtual int proc_daily_calculation(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> transaction_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var transaction_dateParameter = transaction_date.HasValue ?
                new ObjectParameter("transaction_date", transaction_date) :
                new ObjectParameter("transaction_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_daily_calculation", unit_codeParameter, season_codeParameter, transaction_dateParameter);
        }
    
        public virtual ObjectResult<proc_stoppageSummaryForDate_Result> proc_stoppageSummaryForDate(Nullable<int> unitCode, Nullable<int> crushingSeason, Nullable<System.DateTime> reportDate)
        {
            var unitCodeParameter = unitCode.HasValue ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(int));
    
            var crushingSeasonParameter = crushingSeason.HasValue ?
                new ObjectParameter("CrushingSeason", crushingSeason) :
                new ObjectParameter("CrushingSeason", typeof(int));
    
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_stoppageSummaryForDate_Result>("proc_stoppageSummaryForDate", unitCodeParameter, crushingSeasonParameter, reportDateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_bypass_events_summary_for_period")]
        public virtual IQueryable<func_bypass_events_summary_for_period_Result> func_bypass_events_summary_for_period(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> from_Date, Nullable<System.DateTime> to_date, Nullable<bool> last_season)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var from_DateParameter = from_Date.HasValue ?
                new ObjectParameter("from_Date", from_Date) :
                new ObjectParameter("from_Date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var last_seasonParameter = last_season.HasValue ?
                new ObjectParameter("last_season", last_season) :
                new ObjectParameter("last_season", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_bypass_events_summary_for_period_Result>("[SugarLabEntities].[func_bypass_events_summary_for_period](@unit_code, @season_code, @from_Date, @to_date, @last_season)", unit_codeParameter, season_codeParameter, from_DateParameter, to_dateParameter, last_seasonParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_ledger_data_period_summary")]
        public virtual IQueryable<func_ledger_data_period_summary_Result> func_ledger_data_period_summary(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_ledger_data_period_summary_Result>("[SugarLabEntities].[func_ledger_data_period_summary](@unit_code, @season_code, @fromDate, @toDate)", unit_codeParameter, season_codeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int DataProcessing(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> trans_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var trans_dateParameter = trans_date.HasValue ?
                new ObjectParameter("trans_date", trans_date) :
                new ObjectParameter("trans_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DataProcessing", unit_codeParameter, season_codeParameter, trans_dateParameter);
        }
    
        public virtual int proc_daily_calculation_for_dates(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_daily_calculation_for_dates", unit_codeParameter, season_codeParameter, from_dateParameter, to_dateParameter);
        }
    
        public virtual ObjectResult<proc_stoppages_all_unit_for_day_Result> proc_stoppages_all_unit_for_day(Nullable<int> season_code, Nullable<System.DateTime> stoppage_date)
        {
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var stoppage_dateParameter = stoppage_date.HasValue ?
                new ObjectParameter("stoppage_date", stoppage_date) :
                new ObjectParameter("stoppage_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_stoppages_all_unit_for_day_Result>("proc_stoppages_all_unit_for_day", season_codeParameter, stoppage_dateParameter);
        }
    
        public virtual ObjectResult<proc_summarized_periodical_report_Result> proc_summarized_periodical_report(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date, Nullable<bool> last_season_data)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            var last_season_dataParameter = last_season_data.HasValue ?
                new ObjectParameter("last_season_data", last_season_data) :
                new ObjectParameter("last_season_data", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_summarized_periodical_report_Result>("proc_summarized_periodical_report", unit_codeParameter, season_codeParameter, from_dateParameter, to_dateParameter, last_season_dataParameter);
        }
    
        public virtual ObjectResult<proc_summarized_report_by_crop_day_Result> proc_summarized_report_by_crop_day(Nullable<int> unit_code, Nullable<int> season_code, Nullable<int> crop_day)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var crop_dayParameter = crop_day.HasValue ?
                new ObjectParameter("crop_day", crop_day) :
                new ObjectParameter("crop_day", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_summarized_report_by_crop_day_Result>("proc_summarized_report_by_crop_day", unit_codeParameter, season_codeParameter, crop_dayParameter);
        }
    
        public virtual ObjectResult<usp_cane_diversion_factor_Result> usp_cane_diversion_factor(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> trans_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var trans_dateParameter = trans_date.HasValue ?
                new ObjectParameter("trans_date", trans_date) :
                new ObjectParameter("trans_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_cane_diversion_factor_Result>("usp_cane_diversion_factor", unit_codeParameter, season_codeParameter, trans_dateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_DailyAnalysesSummaryForDates")]
        public virtual IQueryable<func_DailyAnalysesSummaryForDates_Result> func_DailyAnalysesSummaryForDates(Nullable<int> unit_code, Nullable<int> crushing_season, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var crushing_seasonParameter = crushing_season.HasValue ?
                new ObjectParameter("crushing_season", crushing_season) :
                new ObjectParameter("crushing_season", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_DailyAnalysesSummaryForDates_Result>("[SugarLabEntities].[func_DailyAnalysesSummaryForDates](@unit_code, @crushing_season, @from_date, @to_date)", unit_codeParameter, crushing_seasonParameter, from_dateParameter, to_dateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_hourly_data_summary_for_date")]
        public virtual IQueryable<func_hourly_data_summary_for_date_Result> func_hourly_data_summary_for_date(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> entry_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var entry_dateParameter = entry_date.HasValue ?
                new ObjectParameter("entry_date", entry_date) :
                new ObjectParameter("entry_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_hourly_data_summary_for_date_Result>("[SugarLabEntities].[func_hourly_data_summary_for_date](@unit_code, @season_code, @entry_date)", unit_codeParameter, season_codeParameter, entry_dateParameter);
        }
    
        [DbFunction("SugarLabEntities", "func_hourly_data_summary_for_period")]
        public virtual IQueryable<func_hourly_data_summary_for_period_Result> func_hourly_data_summary_for_period(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<func_hourly_data_summary_for_period_Result>("[SugarLabEntities].[func_hourly_data_summary_for_period](@unit_code, @season_code, @from_date, @to_date)", unit_codeParameter, season_codeParameter, from_dateParameter, to_dateParameter);
        }
    
        public virtual int usp_delete_hourlyAnalyses(Nullable<int> unit_code, string user_code, Nullable<int> line_id, ObjectParameter rowCount, ObjectParameter message)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var user_codeParameter = user_code != null ?
                new ObjectParameter("user_code", user_code) :
                new ObjectParameter("user_code", typeof(string));
    
            var line_idParameter = line_id.HasValue ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delete_hourlyAnalyses", unit_codeParameter, user_codeParameter, line_idParameter, rowCount, message);
        }
    
        public virtual int usp_delete_twoHourlyAnalyses(Nullable<int> line_id)
        {
            var line_idParameter = line_id.HasValue ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delete_twoHourlyAnalyses", line_idParameter);
        }
    
        public virtual int usp_update_unitSeasons(Nullable<System.Guid> id, Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> crushing_start_datetime, Nullable<System.DateTime> crushing_end_datetime, Nullable<decimal> new_mill_capacity, Nullable<decimal> old_mill_capacity, Nullable<System.TimeSpan> report_start_hourMinuete, Nullable<bool> disableDailyProcess, Nullable<bool> disableAdd, Nullable<bool> disableUpdate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var crushing_start_datetimeParameter = crushing_start_datetime.HasValue ?
                new ObjectParameter("crushing_start_datetime", crushing_start_datetime) :
                new ObjectParameter("crushing_start_datetime", typeof(System.DateTime));
    
            var crushing_end_datetimeParameter = crushing_end_datetime.HasValue ?
                new ObjectParameter("crushing_end_datetime", crushing_end_datetime) :
                new ObjectParameter("crushing_end_datetime", typeof(System.DateTime));
    
            var new_mill_capacityParameter = new_mill_capacity.HasValue ?
                new ObjectParameter("new_mill_capacity", new_mill_capacity) :
                new ObjectParameter("new_mill_capacity", typeof(decimal));
    
            var old_mill_capacityParameter = old_mill_capacity.HasValue ?
                new ObjectParameter("old_mill_capacity", old_mill_capacity) :
                new ObjectParameter("old_mill_capacity", typeof(decimal));
    
            var report_start_hourMinueteParameter = report_start_hourMinuete.HasValue ?
                new ObjectParameter("report_start_hourMinuete", report_start_hourMinuete) :
                new ObjectParameter("report_start_hourMinuete", typeof(System.TimeSpan));
    
            var disableDailyProcessParameter = disableDailyProcess.HasValue ?
                new ObjectParameter("disableDailyProcess", disableDailyProcess) :
                new ObjectParameter("disableDailyProcess", typeof(bool));
    
            var disableAddParameter = disableAdd.HasValue ?
                new ObjectParameter("disableAdd", disableAdd) :
                new ObjectParameter("disableAdd", typeof(bool));
    
            var disableUpdateParameter = disableUpdate.HasValue ?
                new ObjectParameter("disableUpdate", disableUpdate) :
                new ObjectParameter("disableUpdate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_update_unitSeasons", idParameter, unit_codeParameter, season_codeParameter, crushing_start_datetimeParameter, crushing_end_datetimeParameter, new_mill_capacityParameter, old_mill_capacityParameter, report_start_hourMinueteParameter, disableDailyProcessParameter, disableAddParameter, disableUpdateParameter);
        }
    
        public virtual int usp_update_unitSesasons(Nullable<System.Guid> id, Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> crushing_start_datetime, Nullable<System.DateTime> crushing_end_datetime, Nullable<decimal> new_mill_capacity, Nullable<decimal> old_mill_capacity, Nullable<System.TimeSpan> report_start_hourMinuete, Nullable<bool> disableDailyProcess, Nullable<bool> disableAdd, Nullable<bool> disableUpdate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var crushing_start_datetimeParameter = crushing_start_datetime.HasValue ?
                new ObjectParameter("crushing_start_datetime", crushing_start_datetime) :
                new ObjectParameter("crushing_start_datetime", typeof(System.DateTime));
    
            var crushing_end_datetimeParameter = crushing_end_datetime.HasValue ?
                new ObjectParameter("crushing_end_datetime", crushing_end_datetime) :
                new ObjectParameter("crushing_end_datetime", typeof(System.DateTime));
    
            var new_mill_capacityParameter = new_mill_capacity.HasValue ?
                new ObjectParameter("new_mill_capacity", new_mill_capacity) :
                new ObjectParameter("new_mill_capacity", typeof(decimal));
    
            var old_mill_capacityParameter = old_mill_capacity.HasValue ?
                new ObjectParameter("old_mill_capacity", old_mill_capacity) :
                new ObjectParameter("old_mill_capacity", typeof(decimal));
    
            var report_start_hourMinueteParameter = report_start_hourMinuete.HasValue ?
                new ObjectParameter("report_start_hourMinuete", report_start_hourMinuete) :
                new ObjectParameter("report_start_hourMinuete", typeof(System.TimeSpan));
    
            var disableDailyProcessParameter = disableDailyProcess.HasValue ?
                new ObjectParameter("disableDailyProcess", disableDailyProcess) :
                new ObjectParameter("disableDailyProcess", typeof(bool));
    
            var disableAddParameter = disableAdd.HasValue ?
                new ObjectParameter("disableAdd", disableAdd) :
                new ObjectParameter("disableAdd", typeof(bool));
    
            var disableUpdateParameter = disableUpdate.HasValue ?
                new ObjectParameter("disableUpdate", disableUpdate) :
                new ObjectParameter("disableUpdate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_update_unitSesasons", idParameter, unit_codeParameter, season_codeParameter, crushing_start_datetimeParameter, crushing_end_datetimeParameter, new_mill_capacityParameter, old_mill_capacityParameter, report_start_hourMinueteParameter, disableDailyProcessParameter, disableAddParameter, disableUpdateParameter);
        }
    
        public virtual ObjectResult<usp_dashboard_select_hourlyData_Result> usp_dashboard_select_hourlyData(Nullable<int> company_code, Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> entry_date)
        {
            var company_codeParameter = company_code.HasValue ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(int));
    
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var entry_dateParameter = entry_date.HasValue ?
                new ObjectParameter("entry_date", entry_date) :
                new ObjectParameter("entry_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_dashboard_select_hourlyData_Result>("usp_dashboard_select_hourlyData", company_codeParameter, unit_codeParameter, season_codeParameter, entry_dateParameter);
        }
    
        public virtual int usp_dashboard_select_processedData(Nullable<int> company_code, Nullable<int> season_code, Nullable<int> history_days)
        {
            var company_codeParameter = company_code.HasValue ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var history_daysParameter = history_days.HasValue ?
                new ObjectParameter("history_days", history_days) :
                new ObjectParameter("history_days", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_dashboard_select_processedData", company_codeParameter, season_codeParameter, history_daysParameter);
        }
    
        public virtual int usp_insert_hourly_millControlData(Nullable<int> hourlyAnalysesNo, Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> entry_date, Nullable<int> entry_time, Nullable<decimal> imbibition_water_temp, Nullable<decimal> exhaust_steam_temp, Nullable<bool> mill_biocide_dosing, Nullable<bool> mill_washing, Nullable<bool> mill_steaming, Nullable<decimal> sugar_bags_temp, Nullable<decimal> molasses_inlet_temp, Nullable<decimal> molasses_outlet_temp, Nullable<decimal> mill_hydraulic_pressure_one, Nullable<decimal> mill_hydraulic_pressure_two, Nullable<decimal> mill_hydraulic_pressure_three, Nullable<decimal> mill_hydraulic_pressure_four, Nullable<decimal> mill_hydraulic_pressure_five, Nullable<decimal> mill_load_one, Nullable<decimal> mill_load_two, Nullable<decimal> mill_load_three, Nullable<decimal> mill_load_four, Nullable<decimal> mill_load_five, Nullable<decimal> mill_rpm_one, Nullable<decimal> mill_rpm_two, Nullable<decimal> mill_rpm_three, Nullable<decimal> mill_rpm_four, Nullable<decimal> mill_rpm_five, ObjectParameter inserted_rows, ObjectParameter error_message)
        {
            var hourlyAnalysesNoParameter = hourlyAnalysesNo.HasValue ?
                new ObjectParameter("HourlyAnalysesNo", hourlyAnalysesNo) :
                new ObjectParameter("HourlyAnalysesNo", typeof(int));
    
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var entry_dateParameter = entry_date.HasValue ?
                new ObjectParameter("entry_date", entry_date) :
                new ObjectParameter("entry_date", typeof(System.DateTime));
    
            var entry_timeParameter = entry_time.HasValue ?
                new ObjectParameter("entry_time", entry_time) :
                new ObjectParameter("entry_time", typeof(int));
    
            var imbibition_water_tempParameter = imbibition_water_temp.HasValue ?
                new ObjectParameter("imbibition_water_temp", imbibition_water_temp) :
                new ObjectParameter("imbibition_water_temp", typeof(decimal));
    
            var exhaust_steam_tempParameter = exhaust_steam_temp.HasValue ?
                new ObjectParameter("exhaust_steam_temp", exhaust_steam_temp) :
                new ObjectParameter("exhaust_steam_temp", typeof(decimal));
    
            var mill_biocide_dosingParameter = mill_biocide_dosing.HasValue ?
                new ObjectParameter("mill_biocide_dosing", mill_biocide_dosing) :
                new ObjectParameter("mill_biocide_dosing", typeof(bool));
    
            var mill_washingParameter = mill_washing.HasValue ?
                new ObjectParameter("mill_washing", mill_washing) :
                new ObjectParameter("mill_washing", typeof(bool));
    
            var mill_steamingParameter = mill_steaming.HasValue ?
                new ObjectParameter("mill_steaming", mill_steaming) :
                new ObjectParameter("mill_steaming", typeof(bool));
    
            var sugar_bags_tempParameter = sugar_bags_temp.HasValue ?
                new ObjectParameter("sugar_bags_temp", sugar_bags_temp) :
                new ObjectParameter("sugar_bags_temp", typeof(decimal));
    
            var molasses_inlet_tempParameter = molasses_inlet_temp.HasValue ?
                new ObjectParameter("molasses_inlet_temp", molasses_inlet_temp) :
                new ObjectParameter("molasses_inlet_temp", typeof(decimal));
    
            var molasses_outlet_tempParameter = molasses_outlet_temp.HasValue ?
                new ObjectParameter("molasses_outlet_temp", molasses_outlet_temp) :
                new ObjectParameter("molasses_outlet_temp", typeof(decimal));
    
            var mill_hydraulic_pressure_oneParameter = mill_hydraulic_pressure_one.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_one", mill_hydraulic_pressure_one) :
                new ObjectParameter("mill_hydraulic_pressure_one", typeof(decimal));
    
            var mill_hydraulic_pressure_twoParameter = mill_hydraulic_pressure_two.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_two", mill_hydraulic_pressure_two) :
                new ObjectParameter("mill_hydraulic_pressure_two", typeof(decimal));
    
            var mill_hydraulic_pressure_threeParameter = mill_hydraulic_pressure_three.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_three", mill_hydraulic_pressure_three) :
                new ObjectParameter("mill_hydraulic_pressure_three", typeof(decimal));
    
            var mill_hydraulic_pressure_fourParameter = mill_hydraulic_pressure_four.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_four", mill_hydraulic_pressure_four) :
                new ObjectParameter("mill_hydraulic_pressure_four", typeof(decimal));
    
            var mill_hydraulic_pressure_fiveParameter = mill_hydraulic_pressure_five.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_five", mill_hydraulic_pressure_five) :
                new ObjectParameter("mill_hydraulic_pressure_five", typeof(decimal));
    
            var mill_load_oneParameter = mill_load_one.HasValue ?
                new ObjectParameter("mill_load_one", mill_load_one) :
                new ObjectParameter("mill_load_one", typeof(decimal));
    
            var mill_load_twoParameter = mill_load_two.HasValue ?
                new ObjectParameter("mill_load_two", mill_load_two) :
                new ObjectParameter("mill_load_two", typeof(decimal));
    
            var mill_load_threeParameter = mill_load_three.HasValue ?
                new ObjectParameter("mill_load_three", mill_load_three) :
                new ObjectParameter("mill_load_three", typeof(decimal));
    
            var mill_load_fourParameter = mill_load_four.HasValue ?
                new ObjectParameter("mill_load_four", mill_load_four) :
                new ObjectParameter("mill_load_four", typeof(decimal));
    
            var mill_load_fiveParameter = mill_load_five.HasValue ?
                new ObjectParameter("mill_load_five", mill_load_five) :
                new ObjectParameter("mill_load_five", typeof(decimal));
    
            var mill_rpm_oneParameter = mill_rpm_one.HasValue ?
                new ObjectParameter("mill_rpm_one", mill_rpm_one) :
                new ObjectParameter("mill_rpm_one", typeof(decimal));
    
            var mill_rpm_twoParameter = mill_rpm_two.HasValue ?
                new ObjectParameter("mill_rpm_two", mill_rpm_two) :
                new ObjectParameter("mill_rpm_two", typeof(decimal));
    
            var mill_rpm_threeParameter = mill_rpm_three.HasValue ?
                new ObjectParameter("mill_rpm_three", mill_rpm_three) :
                new ObjectParameter("mill_rpm_three", typeof(decimal));
    
            var mill_rpm_fourParameter = mill_rpm_four.HasValue ?
                new ObjectParameter("mill_rpm_four", mill_rpm_four) :
                new ObjectParameter("mill_rpm_four", typeof(decimal));
    
            var mill_rpm_fiveParameter = mill_rpm_five.HasValue ?
                new ObjectParameter("mill_rpm_five", mill_rpm_five) :
                new ObjectParameter("mill_rpm_five", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_insert_hourly_millControlData", hourlyAnalysesNoParameter, unit_codeParameter, season_codeParameter, entry_dateParameter, entry_timeParameter, imbibition_water_tempParameter, exhaust_steam_tempParameter, mill_biocide_dosingParameter, mill_washingParameter, mill_steamingParameter, sugar_bags_tempParameter, molasses_inlet_tempParameter, molasses_outlet_tempParameter, mill_hydraulic_pressure_oneParameter, mill_hydraulic_pressure_twoParameter, mill_hydraulic_pressure_threeParameter, mill_hydraulic_pressure_fourParameter, mill_hydraulic_pressure_fiveParameter, mill_load_oneParameter, mill_load_twoParameter, mill_load_threeParameter, mill_load_fourParameter, mill_load_fiveParameter, mill_rpm_oneParameter, mill_rpm_twoParameter, mill_rpm_threeParameter, mill_rpm_fourParameter, mill_rpm_fiveParameter, inserted_rows, error_message);
        }
    
        public virtual int usp_insert_hourlyAnalyses(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> entry_date, Nullable<int> entry_time, Nullable<int> new_mill_juice, Nullable<int> old_mill_juice, Nullable<int> new_mill_water, Nullable<int> old_mill_water, Nullable<int> sugar_bags_L31, Nullable<int> sugar_bags_L30, Nullable<int> sugar_bags_M31, Nullable<int> sugar_bags_M30, Nullable<int> sugar_bags_S31, Nullable<int> sugar_bags_S30, Nullable<int> sugar_bags_Biss, Nullable<int> sugar_raw, string cooling_trace, Nullable<decimal> cooling_pol, Nullable<decimal> cooling_ph, Nullable<int> standing_trucks, Nullable<int> standing_trolley, Nullable<int> standing_trippler, Nullable<int> standing_cart, Nullable<decimal> uncrushed_cane, Nullable<decimal> crushed_cane, Nullable<decimal> cane_diverted_for_syrup, Nullable<decimal> diverted_syrup_quantity, Nullable<int> export_sugar, string current_user, Nullable<decimal> imbibition_water_temp, Nullable<decimal> exhaust_steam_temp, Nullable<bool> mill_biocide_dosing, Nullable<bool> mill_washing, Nullable<bool> mill_steaming, Nullable<decimal> sugar_bags_temp, Nullable<decimal> molasses_inlet_temp, Nullable<decimal> molasses_outlet_temp, Nullable<decimal> mill_hydraulic_pressure_one, Nullable<decimal> mill_hydraulic_pressure_two, Nullable<decimal> mill_hydraulic_pressure_three, Nullable<decimal> mill_hydraulic_pressure_four, Nullable<decimal> mill_hydraulic_pressure_five, Nullable<decimal> mill_load_one, Nullable<decimal> mill_load_two, Nullable<decimal> mill_load_three, Nullable<decimal> mill_load_four, Nullable<decimal> mill_load_five, Nullable<decimal> mill_rpm_one, Nullable<decimal> mill_rpm_two, Nullable<decimal> mill_rpm_three, Nullable<decimal> mill_rpm_four, Nullable<decimal> mill_rpm_five, ObjectParameter inserted_rows, ObjectParameter error_message)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var entry_dateParameter = entry_date.HasValue ?
                new ObjectParameter("entry_date", entry_date) :
                new ObjectParameter("entry_date", typeof(System.DateTime));
    
            var entry_timeParameter = entry_time.HasValue ?
                new ObjectParameter("entry_time", entry_time) :
                new ObjectParameter("entry_time", typeof(int));
    
            var new_mill_juiceParameter = new_mill_juice.HasValue ?
                new ObjectParameter("new_mill_juice", new_mill_juice) :
                new ObjectParameter("new_mill_juice", typeof(int));
    
            var old_mill_juiceParameter = old_mill_juice.HasValue ?
                new ObjectParameter("old_mill_juice", old_mill_juice) :
                new ObjectParameter("old_mill_juice", typeof(int));
    
            var new_mill_waterParameter = new_mill_water.HasValue ?
                new ObjectParameter("new_mill_water", new_mill_water) :
                new ObjectParameter("new_mill_water", typeof(int));
    
            var old_mill_waterParameter = old_mill_water.HasValue ?
                new ObjectParameter("old_mill_water", old_mill_water) :
                new ObjectParameter("old_mill_water", typeof(int));
    
            var sugar_bags_L31Parameter = sugar_bags_L31.HasValue ?
                new ObjectParameter("sugar_bags_L31", sugar_bags_L31) :
                new ObjectParameter("sugar_bags_L31", typeof(int));
    
            var sugar_bags_L30Parameter = sugar_bags_L30.HasValue ?
                new ObjectParameter("sugar_bags_L30", sugar_bags_L30) :
                new ObjectParameter("sugar_bags_L30", typeof(int));
    
            var sugar_bags_M31Parameter = sugar_bags_M31.HasValue ?
                new ObjectParameter("sugar_bags_M31", sugar_bags_M31) :
                new ObjectParameter("sugar_bags_M31", typeof(int));
    
            var sugar_bags_M30Parameter = sugar_bags_M30.HasValue ?
                new ObjectParameter("sugar_bags_M30", sugar_bags_M30) :
                new ObjectParameter("sugar_bags_M30", typeof(int));
    
            var sugar_bags_S31Parameter = sugar_bags_S31.HasValue ?
                new ObjectParameter("sugar_bags_S31", sugar_bags_S31) :
                new ObjectParameter("sugar_bags_S31", typeof(int));
    
            var sugar_bags_S30Parameter = sugar_bags_S30.HasValue ?
                new ObjectParameter("sugar_bags_S30", sugar_bags_S30) :
                new ObjectParameter("sugar_bags_S30", typeof(int));
    
            var sugar_bags_BissParameter = sugar_bags_Biss.HasValue ?
                new ObjectParameter("sugar_bags_Biss", sugar_bags_Biss) :
                new ObjectParameter("sugar_bags_Biss", typeof(int));
    
            var sugar_rawParameter = sugar_raw.HasValue ?
                new ObjectParameter("sugar_raw", sugar_raw) :
                new ObjectParameter("sugar_raw", typeof(int));
    
            var cooling_traceParameter = cooling_trace != null ?
                new ObjectParameter("cooling_trace", cooling_trace) :
                new ObjectParameter("cooling_trace", typeof(string));
    
            var cooling_polParameter = cooling_pol.HasValue ?
                new ObjectParameter("cooling_pol", cooling_pol) :
                new ObjectParameter("cooling_pol", typeof(decimal));
    
            var cooling_phParameter = cooling_ph.HasValue ?
                new ObjectParameter("cooling_ph", cooling_ph) :
                new ObjectParameter("cooling_ph", typeof(decimal));
    
            var standing_trucksParameter = standing_trucks.HasValue ?
                new ObjectParameter("standing_trucks", standing_trucks) :
                new ObjectParameter("standing_trucks", typeof(int));
    
            var standing_trolleyParameter = standing_trolley.HasValue ?
                new ObjectParameter("standing_trolley", standing_trolley) :
                new ObjectParameter("standing_trolley", typeof(int));
    
            var standing_tripplerParameter = standing_trippler.HasValue ?
                new ObjectParameter("standing_trippler", standing_trippler) :
                new ObjectParameter("standing_trippler", typeof(int));
    
            var standing_cartParameter = standing_cart.HasValue ?
                new ObjectParameter("standing_cart", standing_cart) :
                new ObjectParameter("standing_cart", typeof(int));
    
            var uncrushed_caneParameter = uncrushed_cane.HasValue ?
                new ObjectParameter("uncrushed_cane", uncrushed_cane) :
                new ObjectParameter("uncrushed_cane", typeof(decimal));
    
            var crushed_caneParameter = crushed_cane.HasValue ?
                new ObjectParameter("crushed_cane", crushed_cane) :
                new ObjectParameter("crushed_cane", typeof(decimal));
    
            var cane_diverted_for_syrupParameter = cane_diverted_for_syrup.HasValue ?
                new ObjectParameter("cane_diverted_for_syrup", cane_diverted_for_syrup) :
                new ObjectParameter("cane_diverted_for_syrup", typeof(decimal));
    
            var diverted_syrup_quantityParameter = diverted_syrup_quantity.HasValue ?
                new ObjectParameter("diverted_syrup_quantity", diverted_syrup_quantity) :
                new ObjectParameter("diverted_syrup_quantity", typeof(decimal));
    
            var export_sugarParameter = export_sugar.HasValue ?
                new ObjectParameter("export_sugar", export_sugar) :
                new ObjectParameter("export_sugar", typeof(int));
    
            var current_userParameter = current_user != null ?
                new ObjectParameter("current_user", current_user) :
                new ObjectParameter("current_user", typeof(string));
    
            var imbibition_water_tempParameter = imbibition_water_temp.HasValue ?
                new ObjectParameter("imbibition_water_temp", imbibition_water_temp) :
                new ObjectParameter("imbibition_water_temp", typeof(decimal));
    
            var exhaust_steam_tempParameter = exhaust_steam_temp.HasValue ?
                new ObjectParameter("exhaust_steam_temp", exhaust_steam_temp) :
                new ObjectParameter("exhaust_steam_temp", typeof(decimal));
    
            var mill_biocide_dosingParameter = mill_biocide_dosing.HasValue ?
                new ObjectParameter("mill_biocide_dosing", mill_biocide_dosing) :
                new ObjectParameter("mill_biocide_dosing", typeof(bool));
    
            var mill_washingParameter = mill_washing.HasValue ?
                new ObjectParameter("mill_washing", mill_washing) :
                new ObjectParameter("mill_washing", typeof(bool));
    
            var mill_steamingParameter = mill_steaming.HasValue ?
                new ObjectParameter("mill_steaming", mill_steaming) :
                new ObjectParameter("mill_steaming", typeof(bool));
    
            var sugar_bags_tempParameter = sugar_bags_temp.HasValue ?
                new ObjectParameter("sugar_bags_temp", sugar_bags_temp) :
                new ObjectParameter("sugar_bags_temp", typeof(decimal));
    
            var molasses_inlet_tempParameter = molasses_inlet_temp.HasValue ?
                new ObjectParameter("molasses_inlet_temp", molasses_inlet_temp) :
                new ObjectParameter("molasses_inlet_temp", typeof(decimal));
    
            var molasses_outlet_tempParameter = molasses_outlet_temp.HasValue ?
                new ObjectParameter("molasses_outlet_temp", molasses_outlet_temp) :
                new ObjectParameter("molasses_outlet_temp", typeof(decimal));
    
            var mill_hydraulic_pressure_oneParameter = mill_hydraulic_pressure_one.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_one", mill_hydraulic_pressure_one) :
                new ObjectParameter("mill_hydraulic_pressure_one", typeof(decimal));
    
            var mill_hydraulic_pressure_twoParameter = mill_hydraulic_pressure_two.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_two", mill_hydraulic_pressure_two) :
                new ObjectParameter("mill_hydraulic_pressure_two", typeof(decimal));
    
            var mill_hydraulic_pressure_threeParameter = mill_hydraulic_pressure_three.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_three", mill_hydraulic_pressure_three) :
                new ObjectParameter("mill_hydraulic_pressure_three", typeof(decimal));
    
            var mill_hydraulic_pressure_fourParameter = mill_hydraulic_pressure_four.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_four", mill_hydraulic_pressure_four) :
                new ObjectParameter("mill_hydraulic_pressure_four", typeof(decimal));
    
            var mill_hydraulic_pressure_fiveParameter = mill_hydraulic_pressure_five.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_five", mill_hydraulic_pressure_five) :
                new ObjectParameter("mill_hydraulic_pressure_five", typeof(decimal));
    
            var mill_load_oneParameter = mill_load_one.HasValue ?
                new ObjectParameter("mill_load_one", mill_load_one) :
                new ObjectParameter("mill_load_one", typeof(decimal));
    
            var mill_load_twoParameter = mill_load_two.HasValue ?
                new ObjectParameter("mill_load_two", mill_load_two) :
                new ObjectParameter("mill_load_two", typeof(decimal));
    
            var mill_load_threeParameter = mill_load_three.HasValue ?
                new ObjectParameter("mill_load_three", mill_load_three) :
                new ObjectParameter("mill_load_three", typeof(decimal));
    
            var mill_load_fourParameter = mill_load_four.HasValue ?
                new ObjectParameter("mill_load_four", mill_load_four) :
                new ObjectParameter("mill_load_four", typeof(decimal));
    
            var mill_load_fiveParameter = mill_load_five.HasValue ?
                new ObjectParameter("mill_load_five", mill_load_five) :
                new ObjectParameter("mill_load_five", typeof(decimal));
    
            var mill_rpm_oneParameter = mill_rpm_one.HasValue ?
                new ObjectParameter("mill_rpm_one", mill_rpm_one) :
                new ObjectParameter("mill_rpm_one", typeof(decimal));
    
            var mill_rpm_twoParameter = mill_rpm_two.HasValue ?
                new ObjectParameter("mill_rpm_two", mill_rpm_two) :
                new ObjectParameter("mill_rpm_two", typeof(decimal));
    
            var mill_rpm_threeParameter = mill_rpm_three.HasValue ?
                new ObjectParameter("mill_rpm_three", mill_rpm_three) :
                new ObjectParameter("mill_rpm_three", typeof(decimal));
    
            var mill_rpm_fourParameter = mill_rpm_four.HasValue ?
                new ObjectParameter("mill_rpm_four", mill_rpm_four) :
                new ObjectParameter("mill_rpm_four", typeof(decimal));
    
            var mill_rpm_fiveParameter = mill_rpm_five.HasValue ?
                new ObjectParameter("mill_rpm_five", mill_rpm_five) :
                new ObjectParameter("mill_rpm_five", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_insert_hourlyAnalyses", unit_codeParameter, season_codeParameter, entry_dateParameter, entry_timeParameter, new_mill_juiceParameter, old_mill_juiceParameter, new_mill_waterParameter, old_mill_waterParameter, sugar_bags_L31Parameter, sugar_bags_L30Parameter, sugar_bags_M31Parameter, sugar_bags_M30Parameter, sugar_bags_S31Parameter, sugar_bags_S30Parameter, sugar_bags_BissParameter, sugar_rawParameter, cooling_traceParameter, cooling_polParameter, cooling_phParameter, standing_trucksParameter, standing_trolleyParameter, standing_tripplerParameter, standing_cartParameter, uncrushed_caneParameter, crushed_caneParameter, cane_diverted_for_syrupParameter, diverted_syrup_quantityParameter, export_sugarParameter, current_userParameter, imbibition_water_tempParameter, exhaust_steam_tempParameter, mill_biocide_dosingParameter, mill_washingParameter, mill_steamingParameter, sugar_bags_tempParameter, molasses_inlet_tempParameter, molasses_outlet_tempParameter, mill_hydraulic_pressure_oneParameter, mill_hydraulic_pressure_twoParameter, mill_hydraulic_pressure_threeParameter, mill_hydraulic_pressure_fourParameter, mill_hydraulic_pressure_fiveParameter, mill_load_oneParameter, mill_load_twoParameter, mill_load_threeParameter, mill_load_fourParameter, mill_load_fiveParameter, mill_rpm_oneParameter, mill_rpm_twoParameter, mill_rpm_threeParameter, mill_rpm_fourParameter, mill_rpm_fiveParameter, inserted_rows, error_message);
        }
    
        public virtual ObjectResult<usp_select_hourlyAnalyses_Result> usp_select_hourlyAnalyses(Nullable<int> unit_code, Nullable<System.DateTime> entry_date)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var entry_dateParameter = entry_date.HasValue ?
                new ObjectParameter("entry_date", entry_date) :
                new ObjectParameter("entry_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_hourlyAnalyses_Result>("usp_select_hourlyAnalyses", unit_codeParameter, entry_dateParameter);
        }
    
        public virtual ObjectResult<usp_select_hourlyAnalysesMillControlData_Result> usp_select_hourlyAnalysesMillControlData(Nullable<int> id, Nullable<int> unit_code)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_select_hourlyAnalysesMillControlData_Result>("usp_select_hourlyAnalysesMillControlData", idParameter, unit_codeParameter);
        }
    
        public virtual ObjectResult<usp_selectAll_hourlyAnalysesMillControlData_Result> usp_selectAll_hourlyAnalysesMillControlData(Nullable<int> unit_code, Nullable<System.DateTime> entry_date, Nullable<int> season_code)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var entry_dateParameter = entry_date.HasValue ?
                new ObjectParameter("entry_date", entry_date) :
                new ObjectParameter("entry_date", typeof(System.DateTime));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_selectAll_hourlyAnalysesMillControlData_Result>("usp_selectAll_hourlyAnalysesMillControlData", unit_codeParameter, entry_dateParameter, season_codeParameter);
        }
    
        public virtual int usp_update_mill_control_data(Nullable<int> unit_code, Nullable<int> season_code, Nullable<int> id, Nullable<decimal> imbibition_water_temp, Nullable<decimal> exhaust_steam_temp, Nullable<bool> mill_biocide_dosing, Nullable<bool> mill_washing, Nullable<bool> mill_steaming, Nullable<decimal> sugar_bags_temp, Nullable<decimal> molasses_inlet_temp, Nullable<decimal> molasses_outlet_temp, string cooling_trace, Nullable<decimal> cooling_pol, Nullable<decimal> cooling_ph, Nullable<decimal> mill_hydraulic_pressure_one, Nullable<decimal> mill_hydraulic_pressure_two, Nullable<decimal> mill_hydraulic_pressure_three, Nullable<decimal> mill_hydraulic_pressure_four, Nullable<decimal> mill_hydraulic_pressure_five, Nullable<decimal> mill_load_one, Nullable<decimal> mill_load_two, Nullable<decimal> mill_load_three, Nullable<decimal> mill_load_four, Nullable<decimal> mill_load_five, Nullable<decimal> mill_rpm_one, Nullable<decimal> mill_rpm_two, Nullable<decimal> mill_rpm_three, Nullable<decimal> mill_rpm_four, Nullable<decimal> mill_rpm_five)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var imbibition_water_tempParameter = imbibition_water_temp.HasValue ?
                new ObjectParameter("imbibition_water_temp", imbibition_water_temp) :
                new ObjectParameter("imbibition_water_temp", typeof(decimal));
    
            var exhaust_steam_tempParameter = exhaust_steam_temp.HasValue ?
                new ObjectParameter("exhaust_steam_temp", exhaust_steam_temp) :
                new ObjectParameter("exhaust_steam_temp", typeof(decimal));
    
            var mill_biocide_dosingParameter = mill_biocide_dosing.HasValue ?
                new ObjectParameter("mill_biocide_dosing", mill_biocide_dosing) :
                new ObjectParameter("mill_biocide_dosing", typeof(bool));
    
            var mill_washingParameter = mill_washing.HasValue ?
                new ObjectParameter("mill_washing", mill_washing) :
                new ObjectParameter("mill_washing", typeof(bool));
    
            var mill_steamingParameter = mill_steaming.HasValue ?
                new ObjectParameter("mill_steaming", mill_steaming) :
                new ObjectParameter("mill_steaming", typeof(bool));
    
            var sugar_bags_tempParameter = sugar_bags_temp.HasValue ?
                new ObjectParameter("sugar_bags_temp", sugar_bags_temp) :
                new ObjectParameter("sugar_bags_temp", typeof(decimal));
    
            var molasses_inlet_tempParameter = molasses_inlet_temp.HasValue ?
                new ObjectParameter("molasses_inlet_temp", molasses_inlet_temp) :
                new ObjectParameter("molasses_inlet_temp", typeof(decimal));
    
            var molasses_outlet_tempParameter = molasses_outlet_temp.HasValue ?
                new ObjectParameter("molasses_outlet_temp", molasses_outlet_temp) :
                new ObjectParameter("molasses_outlet_temp", typeof(decimal));
    
            var cooling_traceParameter = cooling_trace != null ?
                new ObjectParameter("cooling_trace", cooling_trace) :
                new ObjectParameter("cooling_trace", typeof(string));
    
            var cooling_polParameter = cooling_pol.HasValue ?
                new ObjectParameter("cooling_pol", cooling_pol) :
                new ObjectParameter("cooling_pol", typeof(decimal));
    
            var cooling_phParameter = cooling_ph.HasValue ?
                new ObjectParameter("cooling_ph", cooling_ph) :
                new ObjectParameter("cooling_ph", typeof(decimal));
    
            var mill_hydraulic_pressure_oneParameter = mill_hydraulic_pressure_one.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_one", mill_hydraulic_pressure_one) :
                new ObjectParameter("mill_hydraulic_pressure_one", typeof(decimal));
    
            var mill_hydraulic_pressure_twoParameter = mill_hydraulic_pressure_two.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_two", mill_hydraulic_pressure_two) :
                new ObjectParameter("mill_hydraulic_pressure_two", typeof(decimal));
    
            var mill_hydraulic_pressure_threeParameter = mill_hydraulic_pressure_three.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_three", mill_hydraulic_pressure_three) :
                new ObjectParameter("mill_hydraulic_pressure_three", typeof(decimal));
    
            var mill_hydraulic_pressure_fourParameter = mill_hydraulic_pressure_four.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_four", mill_hydraulic_pressure_four) :
                new ObjectParameter("mill_hydraulic_pressure_four", typeof(decimal));
    
            var mill_hydraulic_pressure_fiveParameter = mill_hydraulic_pressure_five.HasValue ?
                new ObjectParameter("mill_hydraulic_pressure_five", mill_hydraulic_pressure_five) :
                new ObjectParameter("mill_hydraulic_pressure_five", typeof(decimal));
    
            var mill_load_oneParameter = mill_load_one.HasValue ?
                new ObjectParameter("mill_load_one", mill_load_one) :
                new ObjectParameter("mill_load_one", typeof(decimal));
    
            var mill_load_twoParameter = mill_load_two.HasValue ?
                new ObjectParameter("mill_load_two", mill_load_two) :
                new ObjectParameter("mill_load_two", typeof(decimal));
    
            var mill_load_threeParameter = mill_load_three.HasValue ?
                new ObjectParameter("mill_load_three", mill_load_three) :
                new ObjectParameter("mill_load_three", typeof(decimal));
    
            var mill_load_fourParameter = mill_load_four.HasValue ?
                new ObjectParameter("mill_load_four", mill_load_four) :
                new ObjectParameter("mill_load_four", typeof(decimal));
    
            var mill_load_fiveParameter = mill_load_five.HasValue ?
                new ObjectParameter("mill_load_five", mill_load_five) :
                new ObjectParameter("mill_load_five", typeof(decimal));
    
            var mill_rpm_oneParameter = mill_rpm_one.HasValue ?
                new ObjectParameter("mill_rpm_one", mill_rpm_one) :
                new ObjectParameter("mill_rpm_one", typeof(decimal));
    
            var mill_rpm_twoParameter = mill_rpm_two.HasValue ?
                new ObjectParameter("mill_rpm_two", mill_rpm_two) :
                new ObjectParameter("mill_rpm_two", typeof(decimal));
    
            var mill_rpm_threeParameter = mill_rpm_three.HasValue ?
                new ObjectParameter("mill_rpm_three", mill_rpm_three) :
                new ObjectParameter("mill_rpm_three", typeof(decimal));
    
            var mill_rpm_fourParameter = mill_rpm_four.HasValue ?
                new ObjectParameter("mill_rpm_four", mill_rpm_four) :
                new ObjectParameter("mill_rpm_four", typeof(decimal));
    
            var mill_rpm_fiveParameter = mill_rpm_five.HasValue ?
                new ObjectParameter("mill_rpm_five", mill_rpm_five) :
                new ObjectParameter("mill_rpm_five", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_update_mill_control_data", unit_codeParameter, season_codeParameter, idParameter, imbibition_water_tempParameter, exhaust_steam_tempParameter, mill_biocide_dosingParameter, mill_washingParameter, mill_steamingParameter, sugar_bags_tempParameter, molasses_inlet_tempParameter, molasses_outlet_tempParameter, cooling_traceParameter, cooling_polParameter, cooling_phParameter, mill_hydraulic_pressure_oneParameter, mill_hydraulic_pressure_twoParameter, mill_hydraulic_pressure_threeParameter, mill_hydraulic_pressure_fourParameter, mill_hydraulic_pressure_fiveParameter, mill_load_oneParameter, mill_load_twoParameter, mill_load_threeParameter, mill_load_fourParameter, mill_load_fiveParameter, mill_rpm_oneParameter, mill_rpm_twoParameter, mill_rpm_threeParameter, mill_rpm_fourParameter, mill_rpm_fiveParameter);
        }
    
        public virtual ObjectResult<proc_summarized_report_Result> proc_summarized_report(Nullable<int> unit_code, Nullable<int> season_code, Nullable<System.DateTime> report_date, Nullable<bool> last_season_data)
        {
            var unit_codeParameter = unit_code.HasValue ?
                new ObjectParameter("unit_code", unit_code) :
                new ObjectParameter("unit_code", typeof(int));
    
            var season_codeParameter = season_code.HasValue ?
                new ObjectParameter("season_code", season_code) :
                new ObjectParameter("season_code", typeof(int));
    
            var report_dateParameter = report_date.HasValue ?
                new ObjectParameter("report_date", report_date) :
                new ObjectParameter("report_date", typeof(System.DateTime));
    
            var last_season_dataParameter = last_season_data.HasValue ?
                new ObjectParameter("last_season_data", last_season_data) :
                new ObjectParameter("last_season_data", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_summarized_report_Result>("proc_summarized_report", unit_codeParameter, season_codeParameter, report_dateParameter, last_season_dataParameter);
        }
    }
}
