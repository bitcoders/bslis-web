using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using iTextSharp.text;
using iTextSharp.text.pdf;
using DataAccess.Repositories.ReportsRepository;
using DataAccess.Repositories.AnalysisRepositories;

namespace DataAccess.Repositories.ReportsRepository.DailyReportsPartial
{
    public class ComparitiveReport : DailyReportsRepository
    {
        public override string GeneratePdf(int unitCode, int seasonCode, DateTime reportDate, string path)
        {
            string fileName = DateTime.Now.ToString("dd-MMM-yyyy hh-mm-ss") + ".pdf";
            path = path + fileName;
            FileInfo file = new FileInfo(path);
            file.Directory.Create();
            new ComparitiveReport().ManupulatePdf(unitCode, seasonCode, reportDate, path);
            return path;
        }
        private void ManupulatePdf(int unitCode, int CrushingSeason, DateTime ReportDate, string path)
        {
            #region Objects of all Repositories unsed in the class
            LedgerDataRepository ledgerDataRepository = new LedgerDataRepository();
            MasterUnitRepository masterUnitRepository = new MasterUnitRepository();
            ledger_data ledgerData = new ledger_data();
            func_ledger_data_period_summary_Result ledgerDataPeriod = new func_ledger_data_period_summary_Result();
            //DailyAnalysisRepository dailyAnalysisRepository = new DailyAnalysisRepository();
            //MassecuiteSummaryRepository massecuiteSummaryRepository = new MassecuiteSummaryRepository();
            //MolassesAnalysisRepository molassesAnalysisRepository = new MolassesAnalysisRepository();
            //MeltingAnalysisRepository meltingAnalysisRepository = new MeltingAnalysisRepository();
            //HourlyAnalysisRepository hourlyAnalysisRepository = new HourlyAnalysisRepository();
            #endregion

            var masterUnitDefaults = masterUnitRepository.FindUnitByPk(unitCode);
            ledgerData = ledgerDataRepository.GetLedgerDataForTheDate(unitCode, CrushingSeason, Convert.ToDateTime(ReportDate));
            ledgerDataPeriod = ledgerDataRepository.GetLedgerDataPeriodSummary(unitCode, CrushingSeason, Convert.ToDateTime(masterUnitDefaults.CrushingStartDate), Convert.ToDateTime(ReportDate));
            //var dailyAnalysesSummary = dailyAnalysisRepository.dailyAnalysesSummaryReport(unitCode, CrushingSeason, Convert.ToDateTime(ReportDate));
            //var dailyAnalyses = dailyAnalysisRepository.GetDailyAnalysisDetailsByDate(unitCode, CrushingSeason, Convert.ToDateTime(ReportDate));
            //var massecuiteSummary = massecuiteSummaryRepository.massecuteToDateSummary(unitCode, CrushingSeason, Convert.ToDateTime(ReportDate));
            //var molassesSummary = molassesAnalysisRepository.molassesTodateSummary(unitCode, CrushingSeason, Convert.ToDateTime(ReportDate));
            //var meltingsSummary = meltingAnalysisRepository.GetMeltingsTodateSummary(unitCode, CrushingSeason, Convert.ToDateTime(ReportDate));
            //var hourlyAnalysesSummary = hourlyAnalysisRepository.GetHourlyAnalysisSummaryForDate(unitCode, CrushingSeason, Convert.ToDateTime(ReportDate));

            FileStream fs = new FileStream(path, FileMode.Create);
            Document pdfDoc = new Document(PageSize.A4, 0, 0, 0, 0);
            pdfDoc.SetMargins(2, 2, 2, 2);
            PdfWriter writer = PdfWriter.GetInstance(pdfDoc, fs);
            Font HeaderFont = new Font(Font.FontFamily.HELVETICA, 9f, Font.BOLD, BaseColor.BLUE);
            Font bodyHeader = new Font(Font.FontFamily.HELVETICA, 10f, Font.BOLD, BaseColor.BLACK);
            Font bodyContent = new Font(Font.FontFamily.COURIER, 8f, Font.BOLD, BaseColor.BLACK);


            pdfDoc.AddCreationDate();
            pdfDoc.AddTitle("Daily Comparitive Report");
            pdfDoc.AddKeywords("Report generated by BSLIS Lab Software, Developed by Ravi Bhushan");
            pdfDoc.Open();

            PdfPTable table = new PdfPTable(9);
            table.TotalWidth = 560f;
            table.LockedWidth = true;
            float[] widths = new float[] { 20f, 130f, 50f, 50f, 70f, 50f, 70f, 50f, 70f };
            table.SetWidths(widths);


            PdfPCell HeaderCell = new PdfPCell(new Paragraph(masterUnitDefaults.Name + Environment.NewLine +
                                                            masterUnitDefaults.Address + Environment.NewLine +
                                                            "Daily Comparitive Report" + Environment.NewLine +
                                                             "2019-20"
                                                                , HeaderFont));
            //PdfPCell headerReportPrint = new PdfPCell(new Paragraph("Crop Day @ ", HeaderFont));


            HeaderCell.Border = 0;
            HeaderCell.Colspan = 11;
            HeaderCell.HorizontalAlignment = Element.ALIGN_CENTER;
            table.AddCell(HeaderCell);

            //headerReportPrint.Border = 0;
            //headerReportPrint.Colspan = 3;
            //headerReportPrint.HorizontalAlignment = Element.ALIGN_RIGHT;
            //table.AddCell(headerReportPrint);


            PdfPCell header1_srNo = new PdfPCell(new Phrase("Sr. #", HeaderFont));
            header1_srNo.Rowspan = 2;
            header1_srNo.HorizontalAlignment = Element.ALIGN_MIDDLE;
            PdfPCell header1_particular = new PdfPCell(new Phrase("Particular", HeaderFont));
            header1_particular.HorizontalAlignment = Element.ALIGN_MIDDLE;
            header1_particular.Rowspan = 2;
            PdfPCell header1_uom = new PdfPCell(new Phrase("UOM", HeaderFont));
            header1_uom.HorizontalAlignment = Element.ALIGN_MIDDLE;
            header1_uom.Rowspan = 2;
            PdfPCell header1_this_year = new PdfPCell(new Phrase("This Year", HeaderFont));
            header1_this_year.HorizontalAlignment = Element.ALIGN_MIDDLE;
            header1_this_year.Colspan = 2;
            PdfPCell header1_lastYerPerCropDay = new PdfPCell(new Phrase("Last Year Per Crop Day", HeaderFont));
            header1_lastYerPerCropDay.HorizontalAlignment = Element.ALIGN_MIDDLE;
            header1_lastYerPerCropDay.Colspan = 2;
            PdfPCell header1_lastYearOnDay = new PdfPCell(new Phrase("Last Year On Date", HeaderFont));
            header1_lastYearOnDay.HorizontalAlignment = Element.ALIGN_MIDDLE;
            header1_lastYearOnDay.Colspan = 2;

            table.AddCell(header1_srNo);
            table.AddCell(header1_particular);
            table.AddCell(header1_uom);
            table.AddCell(header1_this_year);
            table.AddCell(header1_lastYerPerCropDay);
            table.AddCell(header1_lastYearOnDay);

            PdfPCell[] Header = new PdfPCell[]{
                    new PdfPCell(new Phrase("Day",HeaderFont)),
                    new PdfPCell(new Phrase("Todate",HeaderFont)),
                    new PdfPCell(new Phrase("Day",HeaderFont)),
                    new PdfPCell(new Phrase("Todate",HeaderFont)),
                    new PdfPCell(new Phrase("Day",HeaderFont)),
                    new PdfPCell(new Phrase("Todate",HeaderFont))
                };
            foreach (PdfPCell content in Header)
            {
                content.HorizontalAlignment = Element.ALIGN_CENTER;
                table.AddCell(content);
            }
            #region Data line one
            PdfPCell[] DocLineOne = new PdfPCell[]{
                    new PdfPCell(new Phrase("1",bodyHeader)),
                    new PdfPCell(new Phrase("Actual Hrs of Crushing",bodyHeader)),
                    new PdfPCell(new Phrase("Hrs-Min",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent))
                };
            foreach (PdfPCell content in DocLineOne)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion
            #region Data line Two

            PdfPCell[] DocLineTwo = new PdfPCell[]{
                    new PdfPCell(new Phrase("2",bodyHeader)),
                    new PdfPCell(new Phrase("Cane Crushed",bodyHeader)),
                    new PdfPCell(new Phrase("Qtls",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.cane_crushed.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.cane_crushed.ToString(),bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLineTwo)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line Two -- recovery % cane
            PdfPCell[] DocLineThree = new PdfPCell[]{
                    new PdfPCell(new Phrase("3",bodyHeader)),
                    new PdfPCell(new Phrase("Recovery % Cane",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.estimated_sugar_percent_cane.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.estimated_sugar_qtl.ToString(),bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLineThree)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line Two -- sugar production (Qtls)
            PdfPCell[] DocLineFour = new PdfPCell[]{
                    new PdfPCell(new Phrase("4",bodyHeader)),
                    new PdfPCell(new Phrase("Sugar Production",bodyHeader)),
                    new PdfPCell(new Phrase("Qtls.",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.total_sugar_bagged.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.total_sugar_bags.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-".ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLineFour)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line Two -- Molasses Sent out
            PdfPCell[] DocLineFive = new PdfPCell[]{
                    new PdfPCell(new Phrase("5",bodyHeader)),
                    new PdfPCell(new Phrase("Molasses Sent Out",bodyHeader)),
                    new PdfPCell(new Phrase("Qtls.",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.final_molasses_sent_out.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.final_molasses_sent_out.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLineFive)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line Six -- Net Sugar Made
            PdfPCell[] DocLineSix = new PdfPCell[]{
                    new PdfPCell(new Phrase("6",bodyHeader)),
                    new PdfPCell(new Phrase("Net Sugar Made",bodyHeader)),
                    new PdfPCell(new Phrase("Qtls.",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.estimated_sugar_qtl.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.estimated_sugar_qtl.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),

                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent))
                };
            foreach (PdfPCell content in DocLineSix)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion


            #region Data line Seven -- Net Molasses Made
            PdfPCell[] DocLineSeven = new PdfPCell[]{
                    new PdfPCell(new Phrase("7",bodyHeader)),
                    new PdfPCell(new Phrase("Net Molasses Made",bodyHeader)),
                    new PdfPCell(new Phrase("Qtls.",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.estimated_molasses_qtl.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.estimated_molasses.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLineSeven)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line Eight -- (Bags(+ -)
            PdfPCell[] DocLineEight = new PdfPCell[]{
                    new PdfPCell(new Phrase("8",bodyHeader)),
                    new PdfPCell(new Phrase("(Bags(+ -)",bodyHeader)),
                    new PdfPCell(new Phrase("Qtls.",bodyContent)),
                    new PdfPCell(new Phrase((ledgerData.estimated_sugar_qtl-ledgerData.total_sugar_bagged).ToString(),bodyContent)),
                    new PdfPCell(new Phrase((ledgerDataPeriod.estimated_sugar_qtl-ledgerDataPeriod.total_sugar_bags).ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-".ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLineEight)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line Nine -- (Molasses(+ -)
            PdfPCell[] DocLineNine = new PdfPCell[]{
                    new PdfPCell(new Phrase("9",bodyHeader)),
                    new PdfPCell(new Phrase("(Molasses(+ -)",bodyHeader)),
                    new PdfPCell(new Phrase("Qtls.",bodyContent)),
                    new PdfPCell(new Phrase((ledgerData.estimated_sugar_qtl-ledgerData.final_molasses_sent_out).ToString(),bodyContent)),
                    new PdfPCell(new Phrase((ledgerDataPeriod.estimated_sugar_qtl-ledgerDataPeriod.final_molasses_sent_out).ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLineNine)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line Ten -- Sugar in process
            PdfPCell[] DocLineTen = new PdfPCell[]{
                    new PdfPCell(new Phrase("10",bodyHeader)),
                    new PdfPCell(new Phrase("Sugar in Process",bodyHeader)),
                    new PdfPCell(new Phrase("Qtls.",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.sugar_in_process_qtl.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.sugar_in_process.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLineTen)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line Eleven -- Molasses in process
            PdfPCell[] DocLineEleven = new PdfPCell[]{
                    new PdfPCell(new Phrase("11",bodyHeader)),
                    new PdfPCell(new Phrase("Molasses in Process",bodyHeader)),
                    new PdfPCell(new Phrase("Qtls.",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.molasses_in_process_qtl.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.molasses_in_process.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLineEleven)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion


            #region Data line 12 -- primary_juice_brix
            PdfPCell[] DocLine12 = new PdfPCell[]{
                    new PdfPCell(new Phrase("12",bodyHeader)),
                    new PdfPCell(new Phrase("Primary Juice Brix",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.combined_pj_brix.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.pj_brix.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine12)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 13 -- primary_juice_brix
            PdfPCell[] DocLine13 = new PdfPCell[]{
                    new PdfPCell(new Phrase("13",bodyHeader)),
                    new PdfPCell(new Phrase("Primary Juice Purity",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.combined_pj_purity.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.pj_purity.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine13)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 14 -- primary_juice_brix
            PdfPCell[] DocLine14 = new PdfPCell[]{
                    new PdfPCell(new Phrase("14",bodyHeader)),
                    new PdfPCell(new Phrase("Mixed Juice Brix",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.combined_mj_brix.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.mj_brix.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine14)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            // line 15 onward
            #region Data line 15 -- Mixed Juice Purity
            PdfPCell[] DocLine15 = new PdfPCell[]{
                    new PdfPCell(new Phrase("15",bodyHeader)),
                    new PdfPCell(new Phrase("Mixed Juice Purity",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.combined_mj_purity.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.mj_purity.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine15)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 16 -- primary_juice_brix
            PdfPCell[] DocLine16 = new PdfPCell[]{
                    new PdfPCell(new Phrase("16",bodyHeader)),
                    new PdfPCell(new Phrase("PJ - MJ Purity",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase((ledgerData.combined_pj_purity-ledgerData.combined_mj_purity).ToString(),bodyContent)),
                    new PdfPCell(new Phrase((ledgerDataPeriod.pj_purity - ledgerDataPeriod.mj_purity).ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine16)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 17 -- fiber_percent_cane
            PdfPCell[] DocLine17 = new PdfPCell[]{
                    new PdfPCell(new Phrase("17",bodyHeader)),
                    new PdfPCell(new Phrase("Fiber Percent Cane",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.fiber_percent_cane.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.fiber_percent_cane.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine17)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 18 -- Pol % Cane
            PdfPCell[] DocLine18 = new PdfPCell[]{
                    new PdfPCell(new Phrase("18",bodyHeader)),
                    new PdfPCell(new Phrase("Pol % Cane",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.pol_in_cane_percent.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.pol_in_cane_percent.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine18)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion
            #region Data line 19 -- Mixed Juice Percent Cane
            PdfPCell[] DocLine19 = new PdfPCell[]{
                    new PdfPCell(new Phrase("19",bodyHeader)),
                    new PdfPCell(new Phrase("Mixed Juice % Cane ",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.net_mixed_juice_percent_cane.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.net_mixed_juice_percent_cane.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine19)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 20 -- primary_juice_brix
            PdfPCell[] DocLine20 = new PdfPCell[]{
                    new PdfPCell(new Phrase("20",bodyHeader)),
                    new PdfPCell(new Phrase("Added Water % Cane",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.added_water_percent_fiber.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.added_water_percent_fiber.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine20)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 21 -- primary_juice_brix
            PdfPCell[] DocLine21 = new PdfPCell[]{
                    new PdfPCell(new Phrase("21",bodyHeader)),
                    new PdfPCell(new Phrase("Bagasse % Cane",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.total_bagasse_percent_cane.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.total_bagasse_percent_cane.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine21)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion


            #region Data line 22 -- molasses % Cane
            PdfPCell[] DocLine22 = new PdfPCell[]{
                    new PdfPCell(new Phrase("22",bodyHeader)),
                    new PdfPCell(new Phrase("Molasses % Cane",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.estimated_molasses_percent_cane.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.estimated_molasses_percent_cane.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine22)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion


            #region Data line 23 -- primary_juice_brix
            PdfPCell[] DocLine23 = new PdfPCell[]{
                    new PdfPCell(new Phrase("23",bodyHeader)),
                    new PdfPCell(new Phrase("Press Cake % Cane",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.press_cake_percent_cane.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.press_cake_percent_cane.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine23)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 24 -- Final Molasses Purity
            PdfPCell[] DocLine24 = new PdfPCell[]{
                    new PdfPCell(new Phrase("24",bodyHeader)),
                    new PdfPCell(new Phrase("Final Molasses Purity",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.final_molasses_purity.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.final_molasses_purity.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine24)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 25 -- Pol % Bagaase
            PdfPCell[] DocLine25 = new PdfPCell[]{
                    new PdfPCell(new Phrase("25",bodyHeader)),
                    new PdfPCell(new Phrase("Pol % Bagaase",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.combined_bagasse_average.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.combined_bagasse_percent.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine25)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 26 -- Moisture % Bagasse
            PdfPCell[] DocLine26 = new PdfPCell[]{
                    new PdfPCell(new Phrase("26",bodyHeader)),
                    new PdfPCell(new Phrase("Moisture % Bagasse",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.moist_percent_bagasse.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.moist_bagasse_percent.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine26)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 27 -- Pol % Press Cake
            PdfPCell[] DocLine27 = new PdfPCell[]{
                    new PdfPCell(new Phrase("27",bodyHeader)),
                    new PdfPCell(new Phrase("Mixed Juice Brix",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.pol_in_press_cake_percentage_cane.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.pol_in_press_cake_percent.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine27)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 28 -- Jawa Ratio
            PdfPCell[] DocLine28 = new PdfPCell[]{
                    new PdfPCell(new Phrase("28",bodyHeader)),
                    new PdfPCell(new Phrase("Jawa Ratio",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.java_ratio.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.java_ratio.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine28)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion


            #region Data line 29 -- D.M.F
            PdfPCell[] DocLine29 = new PdfPCell[]{
                    new PdfPCell(new Phrase("29",bodyHeader)),
                    new PdfPCell(new Phrase("D.M.F",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.dry_mill_factor_percent_cane.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.dry_mill_factor_percent_cane.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine29)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 30 -- Undiluted jc % cane
            PdfPCell[] DocLine30 = new PdfPCell[]{
                    new PdfPCell(new Phrase("30",bodyHeader)),
                    new PdfPCell(new Phrase("Undiluted jc % cane",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.undiulted_juice_percent_cane.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.undiluted_juice_percent_cane.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine30)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Loss Saperator
            PdfPCell lossSaperator = new PdfPCell(new Phrase("Losses", bodyContent));
            lossSaperator.BackgroundColor = BaseColor.GRAY;
            lossSaperator.HorizontalAlignment = Element.ALIGN_LEFT;
            lossSaperator.Colspan = 9;
            table.AddCell(lossSaperator);
            #endregion

            #region Data line 31 -- Loss in Bagasse
            PdfPCell[] DocLine31 = new PdfPCell[]{
                    new PdfPCell(new Phrase("31",bodyHeader)),
                    new PdfPCell(new Phrase("Loss in Bagasse",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.pol_in_bagasse_percentage_cane.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.pol_in_bagasse_percent_cane.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine31)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 32 -- primary_juice_brix
            PdfPCell[] DocLine32 = new PdfPCell[]{
                    new PdfPCell(new Phrase("32",bodyHeader)),
                    new PdfPCell(new Phrase("Loss in Fil. Cake",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.pol_in_press_cake_percentage_cane.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.pol_in_press_cake_percent_cane.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine32)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 33 -- Loss In Molasses
            PdfPCell[] DocLine33 = new PdfPCell[]{
                    new PdfPCell(new Phrase("33",bodyHeader)),
                    new PdfPCell(new Phrase("Loss In Molasses",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.pol_in_molasses_percent_cane.ToString(),bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine33)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 34 -- Unknown Loss
            PdfPCell[] DocLine34 = new PdfPCell[]{
                    new PdfPCell(new Phrase("34",bodyHeader)),
                    new PdfPCell(new Phrase("Unknown Loss",bodyHeader)),
                    new PdfPCell(new Phrase("%",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.unknown_loss.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.unknown_loss_percent.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine34)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Data line 35 -- Total Loss
            PdfPCell[] DocLine35 = new PdfPCell[]{
                    new PdfPCell(new Phrase("35",bodyHeader)),
                    new PdfPCell(new Phrase("Total",bodyHeader)),
                    new PdfPCell(new Phrase("Qtls.",bodyContent)),
                    new PdfPCell(new Phrase(ledgerData.total_losses_percent.ToString(),bodyContent)),
                    new PdfPCell(new Phrase(ledgerDataPeriod.total_loss_percent.ToString(),bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent)),

                    new PdfPCell(new Phrase("-",bodyContent)),
                    new PdfPCell(new Phrase("-",bodyContent))
                };
            foreach (PdfPCell content in DocLine35)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion

            #region Stoppages Saperator
            PdfPCell stoppageSaperator = new PdfPCell(new Phrase("Stoppages", bodyContent));
            stoppageSaperator.BackgroundColor = BaseColor.GRAY;
            stoppageSaperator.HorizontalAlignment = Element.ALIGN_LEFT;
            stoppageSaperator.Colspan = 9;
            table.AddCell(stoppageSaperator);
            #endregion

            #region Data line 36 -- primary_juice_brix
            PdfPCell[] DocLine36 = new PdfPCell[]{
                    new PdfPCell(new Phrase("36",bodyHeader)),
                    new PdfPCell(new Phrase("New Mill",bodyHeader)),
                    new PdfPCell(new Phrase("Min.",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent))
                };
            foreach (PdfPCell content in DocLine36)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion
            #region Data line 37 -- primary_juice_brix
            PdfPCell[] DocLine37 = new PdfPCell[]{
                    new PdfPCell(new Phrase("37",bodyHeader)),
                    new PdfPCell(new Phrase("Old Mill",bodyHeader)),
                    new PdfPCell(new Phrase("Min.",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent))
                };
            foreach (PdfPCell content in DocLine37)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion
            #region Data line 38 -- primary_juice_brix
            PdfPCell[] DocLine38 = new PdfPCell[]{
                    new PdfPCell(new Phrase("38",bodyHeader)),
                    new PdfPCell(new Phrase("Total Both Mill",bodyHeader)),
                    new PdfPCell(new Phrase("Min.",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent))
                };
            foreach (PdfPCell content in DocLine38)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion
            #region Data line 39 -- primary_juice_brix
            PdfPCell[] DocLine39 = new PdfPCell[]{
                    new PdfPCell(new Phrase("39",bodyHeader)),
                    new PdfPCell(new Phrase("Crushing Capacity Per Day ",bodyHeader)),
                    new PdfPCell(new Phrase("Min.",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent)),
                    new PdfPCell(new Phrase("",bodyContent))
                };
            foreach (PdfPCell content in DocLine39)
            {
                content.HorizontalAlignment = Element.ALIGN_RIGHT;
                table.AddCell(content);
            }
            #endregion
            // at last adding the final table to pdf document
            pdfDoc.Add(table);
            pdfDoc.Close();
        }
    }
}
